{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ENV from \"../../env\";\nexport var SET_USERS = 'SET_USERS';\nexport var UPDATE_USER = 'UPDATE_USER';\nexport var FOLLOW = 'FOLLOW';\nexport var UNFOLLOW = 'UNFOLLOW';\nexport var SET_FIND_PEOPLE = 'SET_FIND_PEOPLE';\nexport var FOLLOW_FIND_PEOPLE = 'FOLLOW_FIND_PEOPLE';\nexport var fetchUsers = function fetchUsers() {\n  return function _callee(dispatch, getState) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/users\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            resData = _context.sent;\n\n            if (!resData.error) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(resData.error);\n\n          case 8:\n            dispatch({\n              type: SET_USERS,\n              users: resData\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var followUser = function followUser(user) {\n  return function _callee2(dispatch, getState) {\n    var token, loggedUser, response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = getState().auth.token;\n            loggedUser = getState().auth.user;\n            dispatch({\n              type: FOLLOW,\n              user: user,\n              loggedUser: loggedUser\n            });\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/user/follow\", {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token\n              },\n              body: JSON.stringify({\n                userId: loggedUser._id,\n                followId: user._id\n              })\n            }));\n\n          case 5:\n            response = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            resData = _context2.sent;\n\n            if (!resData.error) {\n              _context2.next = 11;\n              break;\n            }\n\n            throw new Error(resData.error);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var unfollowUser = function unfollowUser(user) {\n  return function _callee3(dispatch, getState) {\n    var token, loggedUser, response, resData;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = getState().auth.token;\n            loggedUser = getState().auth.user;\n            dispatch({\n              type: UNFOLLOW,\n              user: user,\n              loggedUser: loggedUser\n            });\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/user/unfollow\", {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token\n              },\n              body: JSON.stringify({\n                userId: loggedUser._id,\n                unfollowId: user._id\n              })\n            }));\n\n          case 5:\n            response = _context3.sent;\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            resData = _context3.sent;\n\n            if (!resData.error) {\n              _context3.next = 11;\n              break;\n            }\n\n            throw new Error(resData.error);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetchFindPeopleUsers = function fetchFindPeopleUsers() {\n  return function _callee4(dispatch, getState) {\n    var token, loggedUserId, response, resData;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            token = getState().auth.token;\n            loggedUserId = getState().auth.user._id;\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/user/findpeople/\" + loggedUserId, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token\n              }\n            }));\n\n          case 4:\n            response = _context4.sent;\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            resData = _context4.sent;\n\n            if (!resData.error) {\n              _context4.next = 10;\n              break;\n            }\n\n            throw new Error(resData.error);\n\n          case 10:\n            dispatch({\n              type: SET_FIND_PEOPLE,\n              users: resData\n            });\n            return _context4.abrupt(\"return\", resData);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var followFindPeople = function followFindPeople(userId) {\n  return function _callee5(dispatch, getState) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: FOLLOW_FIND_PEOPLE,\n              userId: userId\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateProfile = function updateProfile(name, email, about, password, base64Data, imageType) {\n  return function _callee6(dispatch, getState) {\n    var token, loggedUserId, userData, response, resData;\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            token = getState().auth.token;\n            loggedUserId = getState().auth.user._id;\n\n            if ((!base64Data || !imageType || base64Data === '' && imageType === '') && password === '') {\n              userData = {\n                name: name,\n                email: email,\n                about: about\n              };\n            } else if ((!base64Data || !imageType || base64Data === '' && imageType === '') && password !== '') {\n              userData = {\n                name: name,\n                email: email,\n                about: about,\n                password: password\n              };\n            } else if (base64Data !== '' && imageType !== '' && password === '') {\n              userData = {\n                name: name,\n                email: email,\n                about: about,\n                base64Data: base64Data,\n                imageType: imageType\n              };\n            } else {\n              userData = {\n                name: name,\n                email: email,\n                about: about,\n                password: password,\n                base64Data: base64Data,\n                imageType: imageType\n              };\n            }\n\n            _context6.next = 5;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/rn/user/\" + loggedUserId, {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token\n              },\n              body: JSON.stringify(userData)\n            }));\n\n          case 5:\n            response = _context6.sent;\n            _context6.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            resData = _context6.sent;\n\n            if (!resData.error) {\n              _context6.next = 11;\n              break;\n            }\n\n            throw new Error(resData.error);\n\n          case 11:\n            dispatch({\n              type: UPDATE_USER,\n              user: resData\n            });\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/store/actions/users.js"],"names":["ENV","SET_USERS","UPDATE_USER","FOLLOW","UNFOLLOW","SET_FIND_PEOPLE","FOLLOW_FIND_PEOPLE","fetchUsers","dispatch","getState","fetch","apiUrl","response","json","resData","error","Error","type","users","followUser","user","token","auth","loggedUser","method","headers","Authorization","body","JSON","stringify","userId","_id","followId","unfollowUser","unfollowId","fetchFindPeopleUsers","loggedUserId","followFindPeople","updateProfile","name","email","about","password","base64Data","imageType","userData"],"mappings":"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","sourcesContent":["import ENV from '../../env';\r\n\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_FIND_PEOPLE = 'SET_FIND_PEOPLE';\r\nexport const FOLLOW_FIND_PEOPLE = 'FOLLOW_FIND_PEOPLE';\r\n\r\nexport const fetchUsers = () => {\r\n    return async (dispatch, getState) => {\r\n        const response = await fetch(`${ENV.apiUrl}/users`);\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n        dispatch({\r\n            type: SET_USERS,\r\n            users: resData\r\n        })\r\n    }\r\n};\r\n\r\nexport const followUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const loggedUser = getState().auth.user;\r\n\r\n        \r\n        dispatch({\r\n            type: FOLLOW,\r\n            user: user,\r\n            loggedUser: loggedUser\r\n        })\r\n\r\n        const response = await fetch(`${ENV.apiUrl}/user/follow`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ userId: loggedUser._id , followId: user._id })\r\n        });\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const unfollowUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const loggedUser = getState().auth.user;\r\n\r\n        dispatch({\r\n            type: UNFOLLOW,\r\n            user: user,\r\n            loggedUser: loggedUser\r\n        })\r\n        const response = await fetch(`${ENV.apiUrl}/user/unfollow`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ userId: loggedUser._id , unfollowId: user._id })\r\n        });\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const fetchFindPeopleUsers = () => {\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const loggedUserId = getState().auth.user._id\r\n\r\n        const response = await fetch(`${ENV.apiUrl}/user/findpeople/${loggedUserId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n    \r\n        dispatch({\r\n            type: SET_FIND_PEOPLE,\r\n            users: resData\r\n        })\r\n\r\n        return resData;\r\n    }\r\n};\r\n\r\n\r\nexport const followFindPeople = (userId) => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({\r\n            type: FOLLOW_FIND_PEOPLE,\r\n            userId: userId\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const updateProfile = (name, email, about, password, base64Data, imageType) => {\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const loggedUserId = getState().auth.user._id;\r\n\r\n        let userData;\r\n        if( (!base64Data || !imageType || (base64Data === '' && imageType === '')) && password === ''){\r\n            userData = { name, email, about }\r\n        } else if((!base64Data || !imageType || (base64Data === '' && imageType === '')) && password !== '') {\r\n            userData = { name, email, about, password } \r\n        } else if ((base64Data !== '' && imageType !== '') && password === ''){\r\n            userData = { name, email, about, base64Data, imageType } \r\n        } else {\r\n            userData = { name, email, about, password, base64Data, imageType } \r\n        }\r\n\r\n        const response = await fetch(`${ENV.apiUrl}/rn/user/${loggedUserId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_USER,\r\n            user: resData\r\n        })\r\n\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}
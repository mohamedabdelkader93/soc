{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\components\\\\UI\\\\ChatListItem.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ENV from \"../../env\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigation } from '@react-navigation/native';\nimport VerifiedUser from \"../../constants/VerifiedUser\";\nimport { Octicons } from '@expo/vector-icons';\nimport Colors from \"../../constants/Colors\";\n\nvar ChatListItem = function ChatListItem(props) {\n  var user = props.user;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var loggedInUserId = useSelector(function (state) {\n    return state.auth.user._id;\n  });\n  var allUsers = useSelector(function (state) {\n    return state.users.allUsers;\n  });\n  var loggedInUser = allUsers.filter(function (u) {\n    return u._id === loggedInUserId;\n  })[0];\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState3 = useState(ENV.apiUrl + \"/user/photo/\" + user._id),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageUri = _useState4[0],\n      setImageUri = _useState4[1];\n\n  var onImageErrorHandler = function onImageErrorHandler() {\n    setImageUri(ENV.defaultImageUri);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Chat', {\n        user: user\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    onError: onImageErrorHandler,\n    style: styles.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.mainContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, user.name + \" \", VerifiedUser.verifiedUsersId.includes(user._id) && React.createElement(Octicons, {\n    name: \"verified\",\n    size: 18,\n    color: Colors.brightBlue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 88\n    }\n  }))), React.createElement(Text, {\n    style: styles.timeAgo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, user.email)))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderColor: \"#FFFFFF\",\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#c2c2c2'\n  },\n  text: {\n    marginBottom: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  content: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 0\n  },\n  mainContent: {\n    marginRight: 60\n  },\n  img: {\n    height: 50,\n    width: 50,\n    margin: 0\n  },\n  attachment: {},\n  separator: {\n    height: 1,\n    backgroundColor: \"#CCCCCC\"\n  },\n  timeAgo: {\n    fontSize: 12,\n    color: \"#696969\"\n  },\n  name: {\n    fontSize: 16,\n    color: \"#1E90FF\"\n  }\n});\nexport default ChatListItem;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/components/UI/ChatListItem.js"],"names":["React","useState","ENV","useSelector","useDispatch","useNavigation","VerifiedUser","Octicons","Colors","ChatListItem","props","user","isLoading","setIsLoading","loggedInUserId","state","auth","_id","allUsers","users","loggedInUser","filter","u","dispatch","navigation","apiUrl","imageUri","setImageUri","onImageErrorHandler","defaultImageUri","navigate","styles","container","uri","avatar","content","mainContent","text","name","verifiedUsersId","includes","brightBlue","timeAgo","email","StyleSheet","create","padding","flexDirection","borderBottomWidth","borderColor","alignItems","width","height","borderRadius","backgroundColor","marginBottom","flexWrap","flex","marginLeft","marginRight","img","margin","attachment","separator","fontSize","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,OAAOC,GAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;;AAEA,kBAAkCV,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,cAAc,GAAGX,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAgBM,GAApB;AAAA,GAAN,CAAlC;AACA,MAAMC,QAAQ,GAAGf,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAK,CAACI,KAAN,CAAYD,QAAhB;AAAA,GAAN,CAA5B;AACA,MAAME,YAAY,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACL,GAAF,KAAUH,cAAd;AAAA,GAAjB,EAA+C,CAA/C,CAArB;AAGA,MAAMS,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,UAAU,GAAGnB,aAAa,EAAhC;;AAQA,mBAAgCJ,QAAQ,CAAIC,GAAG,CAACuB,MAAR,oBAA6Bd,IAAI,CAACM,GAAlC,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BD,IAAAA,WAAW,CAACzB,GAAG,CAAC2B,eAAL,CAAX;AACH,GAFD;;AAIA,SACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACM,QAAX,CAAoB,MAApB,EAA4B;AAAEnB,QAAAA,IAAI,EAAEA;AAAR,OAA5B,CAAN;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEP;AAAP,KADZ;AAEI,IAAA,OAAO,EAAEE,mBAFb;AAGI,IAAA,KAAK,EAAEG,MAAM,CAACG,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEN,MAAM,CAACO,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK3B,IAAI,CAAC2B,IAAL,GAAY,GAHjB,EAKQhC,YAAY,CAACiC,eAAb,CAA6BC,QAA7B,CAAsC7B,IAAI,CAACM,GAA3C,KAAmD,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAET,MAAM,CAACiC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL3D,CADJ,CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/B,IAAI,CAACgC,KADV,CAXJ,CADJ,CANJ,CAHJ,CADJ;AA8BH,CAxDD;;AA0DA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,iBAAiB,EAAE,CAHZ;AAIPC,IAAAA,WAAW,EAAE,SAJN;AAKPC,IAAAA,UAAU,EAAE;AALL,GADkB;AAQ7BhB,EAAAA,MAAM,EAAE;AACJiB,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,eAAe,EAAE;AAJb,GARqB;AAc7BjB,EAAAA,IAAI,EAAE;AACFkB,IAAAA,YAAY,EAAE,CADZ;AAEFR,IAAAA,aAAa,EAAE,KAFb;AAGFS,IAAAA,QAAQ,EAAE;AAHR,GAduB;AAmB7BrB,EAAAA,OAAO,EAAE;AACLsB,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,UAAU,EAAE,EAFP;AAGLC,IAAAA,WAAW,EAAE;AAHR,GAnBoB;AAwB7BvB,EAAAA,WAAW,EAAE;AACTuB,IAAAA,WAAW,EAAE;AADJ,GAxBgB;AA2B7BC,EAAAA,GAAG,EAAE;AACDR,IAAAA,MAAM,EAAE,EADP;AAEDD,IAAAA,KAAK,EAAE,EAFN;AAGDU,IAAAA,MAAM,EAAE;AAHP,GA3BwB;AAgC7BC,EAAAA,UAAU,EAAE,EAhCiB;AAmC7BC,EAAAA,SAAS,EAAE;AACPX,IAAAA,MAAM,EAAE,CADD;AAEPE,IAAAA,eAAe,EAAE;AAFV,GAnCkB;AAuC7BZ,EAAAA,OAAO,EAAE;AACLsB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE;AAFF,GAvCoB;AA2C7B3B,EAAAA,IAAI,EAAE;AACF0B,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE;AAFL;AA3CuB,CAAlB,CAAf;AAiDA,eAAexD,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport ENV from '../../env';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport VerifiedUser from '../../constants/VerifiedUser';\r\nimport { Octicons } from '@expo/vector-icons';\r\nimport Colors from '../../constants/Colors';\r\n\r\n\r\n\r\n\r\nconst ChatListItem = (props) => {\r\n    const { user } = props;\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const loggedInUserId = useSelector(state => state.auth.user._id);\r\n    const allUsers = useSelector(state => state.users.allUsers);\r\n    const loggedInUser = allUsers.filter(u => u._id === loggedInUserId)[0];\r\n    // currUser following list\r\n\r\n    const dispatch = useDispatch();\r\n    const navigation = useNavigation();\r\n\r\n\r\n\r\n\r\n\r\n    // check user._id is in following list\r\n\r\n    const [imageUri, setImageUri] = useState(`${ENV.apiUrl}/user/photo/${user._id}`);\r\n\r\n\r\n    const onImageErrorHandler = () => {\r\n        setImageUri(ENV.defaultImageUri)\r\n    }\r\n\r\n    return (\r\n        <TouchableOpacity\r\n            onPress={() => navigation.navigate('Chat', { user: user })}\r\n        >\r\n            <View style={styles.container}>\r\n                <Image\r\n                    source={{ uri: imageUri }}\r\n                    onError={onImageErrorHandler}\r\n                    style={styles.avatar}\r\n                />\r\n                <View style={styles.content}>\r\n                    <View style={styles.mainContent}>\r\n                        <View style={styles.text}>\r\n                            <Text\r\n                                style={styles.name}\r\n                            >\r\n                                {user.name + \" \"}\r\n                                {\r\n                                    VerifiedUser.verifiedUsersId.includes(user._id) && <Octicons name=\"verified\" size={18} color={Colors.brightBlue} />\r\n                                }\r\n                            </Text>\r\n                        </View>\r\n                        <Text style={styles.timeAgo}>\r\n                            {user.email}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 16,\r\n        flexDirection: 'row',\r\n        borderBottomWidth: 1,\r\n        borderColor: \"#FFFFFF\",\r\n        alignItems: 'flex-start',\r\n    },\r\n    avatar: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        backgroundColor: '#c2c2c2'\r\n    },\r\n    text: {\r\n        marginBottom: 5,\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        marginLeft: 16,\r\n        marginRight: 0\r\n    },\r\n    mainContent: {\r\n        marginRight: 60\r\n    },\r\n    img: {\r\n        height: 50,\r\n        width: 50,\r\n        margin: 0\r\n    },\r\n    attachment: {\r\n\r\n    },\r\n    separator: {\r\n        height: 1,\r\n        backgroundColor: \"#CCCCCC\"\r\n    },\r\n    timeAgo: {\r\n        fontSize: 12,\r\n        color: \"#696969\"\r\n    },\r\n    name: {\r\n        fontSize: 16,\r\n        color: \"#1E90FF\"\r\n    }\r\n})\r\n\r\nexport default ChatListItem;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\user\\\\EditProfileScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as usersActions from \"../../store/actions/users\";\nimport ImgPicker from \"../../components/app/ImgPicker\";\nimport Colors from \"../../constants/Colors\";\nimport ENV from \"../../env\";\nimport { showMessage } from \"react-native-flash-message\";\n\nvar EditProfileScreen = function EditProfileScreen(props) {\n  var loggedUser = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var users = useSelector(function (state) {\n    return state.users.allUsers;\n  });\n  var userDetails = users.filter(function (u) {\n    return u._id === loggedUser._id;\n  })[0];\n\n  var _useState = useState(userDetails.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(userDetails.email),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(userDetails.about),\n      _useState6 = _slicedToArray(_useState5, 2),\n      about = _useState6[0],\n      setAbout = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState({\n    uri: ENV.apiUrl + \"/user/photo/\" + userDetails._id\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editImage = _useState10[0],\n      setEditImage = _useState10[1];\n\n  var _useState11 = useState(userDetails.updated),\n      _useState12 = _slicedToArray(_useState11, 2),\n      previousUpdate = _useState12[0],\n      setPreviousUpdate = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      base64Data = _useState14[0],\n      setBase64Data = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      imageType = _useState16[0],\n      setImageType = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isLoading = _useState18[0],\n      setIsLoading = _useState18[1];\n\n  var dispatch = useDispatch();\n\n  var clearForm = function clearForm() {\n    setName('');\n    setEmail('');\n    setAbout('');\n    setPassword('');\n    setIsLoading(false);\n  };\n\n  var validatePost = function validatePost() {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var passwordRegex = /\\d/;\n    var strLength = base64Data.length;\n    var sizeInBytes = 4 * Math.ceil(strLength / 3) * 0.5624896334383812;\n    var sizeInKb = sizeInBytes / 1000;\n    console.log(sizeInKb);\n\n    if (sizeInKb > 100) {\n      showMessage({\n        message: \"Image size should be less than 150KB.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (!name) {\n      showMessage({\n        message: \"Please enter a valid name.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (name && name.length < 2) {\n      showMessage({\n        message: \"Please enter a valid name.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (!about || about.length === 0) {\n      showMessage({\n        message: \"Please enter something in About field.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (!emailRegex.test(email.toLowerCase())) {\n      showMessage({\n        message: \"Please enter a valid email.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (password.length > 0 && password.length < 6) {\n      showMessage({\n        message: \"Password should be atleast 6 characters long.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (password.length > 0 && !passwordRegex.test(password)) {\n      showMessage({\n        message: \"Password should contain atleast 1 number.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  var updatePost = function updatePost() {\n    return _regeneratorRuntime.async(function updatePost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!validatePost()) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(usersActions.updateProfile(name, email, about, password, base64Data, imageType)));\n\n          case 5:\n            clearForm();\n            props.navigation.navigate('YourProfile', {\n              screen: 'UserProfile'\n            });\n            showMessage({\n              message: \"Your profile was successfully edited.\",\n              type: \"success\",\n              duration: 3000,\n              icon: {\n                icon: \"success\",\n                position: 'left'\n              }\n            });\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            showMessage({\n              message: _context.t0.message,\n              type: \"danger\",\n              icon: {\n                icon: \"danger\",\n                position: 'left'\n              }\n            });\n            console.log(\"ERROR \", _context.t0.message);\n\n          case 14:\n            setIsLoading(false);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  var imagePickedHandler = function imagePickedHandler(base64, imageType) {\n    setBase64Data(base64);\n    setImageType(imageType);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"Profile Photo\")), React.createElement(ImgPicker, {\n    onImageTaken: imagePickedHandler,\n    editImage: editImage,\n    previousUpdate: previousUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, \"Name\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Name\",\n    underlineColorAndroid: \"transparent\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Email\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    underlineColorAndroid: \"transparent\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"About\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"About\",\n    underlineColorAndroid: \"transparent\",\n    value: about,\n    onChangeText: function onChangeText(text) {\n      return setAbout(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Password\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: updatePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }) : React.createElement(Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, \"Update\")))));\n};\n\nexport var screenOptions = {\n  headerTitle: 'Edit Profile'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  errorMsgContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 15,\n    marginHorizontal: 20,\n    borderWidth: 1,\n    borderColor: '#D8000C',\n    backgroundColor: \"#FFBABA\",\n    color: \"#D8000C\",\n    borderRadius: 25\n  },\n  msgText: {\n    fontSize: 15\n  },\n  msgIcon: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center'\n  },\n  labelContainer: {\n    alignSelf: 'flex-start',\n    marginLeft: 16\n  },\n  labelText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    padding: 5,\n    color: Colors.accent\n  },\n  inputContainer: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1,\n    paddingRight: 15\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: Colors.brightBlue,\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  }\n});\nexport default EditProfileScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/user/EditProfileScreen.js"],"names":["React","useState","useDispatch","useSelector","usersActions","ImgPicker","Colors","ENV","showMessage","EditProfileScreen","props","loggedUser","state","auth","user","users","allUsers","userDetails","filter","u","_id","name","setName","email","setEmail","about","setAbout","password","setPassword","uri","apiUrl","editImage","setEditImage","updated","previousUpdate","setPreviousUpdate","base64Data","setBase64Data","imageType","setImageType","isLoading","setIsLoading","dispatch","clearForm","validatePost","emailRegex","passwordRegex","strLength","length","sizeInBytes","Math","ceil","sizeInKb","console","log","message","type","icon","position","test","toLowerCase","updatePost","updateProfile","navigation","navigate","screen","duration","imagePickedHandler","base64","styles","container","labelContainer","labelText","inputContainer","inputs","text","buttonContainer","loginButton","loginText","screenOptions","headerTitle","StyleSheet","create","flex","justifyContent","alignItems","marginTop","errorMsgContainer","display","flexDirection","padding","marginBottom","marginHorizontal","borderWidth","borderColor","backgroundColor","color","borderRadius","msgText","fontSize","msgIcon","width","height","alignSelf","marginLeft","fontWeight","accent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderBottomColor","paddingRight","brightBlue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Image, ActivityIndicator, KeyboardAvoidingView, ScrollView } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport * as usersActions from '../../store/actions/users';\r\nimport ImgPicker from '../../components/app/ImgPicker';\r\nimport Colors from '../../constants/Colors';\r\n\r\nimport ENV from '../../env';\r\nimport { showMessage } from \"react-native-flash-message\";\r\n\r\nconst EditProfileScreen = (props) => {\r\n\r\n    const loggedUser = useSelector(state => state.auth.user);\r\n    const users = useSelector(state => state.users.allUsers);\r\n    const userDetails = users.filter(u => u._id === loggedUser._id)[0];\r\n    \r\n    const [name, setName] = useState(userDetails.name);\r\n    const [email, setEmail] = useState(userDetails.email);\r\n    const [about, setAbout] = useState(userDetails.about);\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [editImage, setEditImage] = useState({\r\n        uri: `${ENV.apiUrl}/user/photo/${userDetails._id}`\r\n    });\r\n    const [previousUpdate, setPreviousUpdate] = useState(userDetails.updated);\r\n    const [base64Data, setBase64Data] = useState('');\r\n    const [imageType, setImageType] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const clearForm = () => {\r\n        setName('');\r\n        setEmail('');\r\n        setAbout('');\r\n        setPassword('');\r\n        setIsLoading(false);\r\n    }\r\n    \r\n    const validatePost = () => {\r\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const passwordRegex = /\\d/\r\n\r\n        let strLength = base64Data.length;\r\n        let sizeInBytes = 4 * Math.ceil((strLength / 3))*0.5624896334383812;\r\n        let sizeInKb = sizeInBytes/1000;\r\n        console.log(sizeInKb);\r\n        if(sizeInKb > 100){\r\n            showMessage({\r\n                message: \"Image size should be less than 150KB.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if( !name){\r\n            showMessage({\r\n                message: \"Please enter a valid name.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n        if( name && name.length < 2){\r\n            showMessage({\r\n                message: \"Please enter a valid name.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if(!about || about.length === 0){\r\n            showMessage({\r\n                message: \"Please enter something in About field.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if(!emailRegex.test(email.toLowerCase())){\r\n            showMessage({\r\n                message: \"Please enter a valid email.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n        \r\n        if(password.length > 0 && password.length < 6){\r\n            showMessage({\r\n                message: \"Password should be atleast 6 characters long.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n\r\n        }\r\n        if(password.length > 0 && !passwordRegex.test(password)){\r\n            showMessage({\r\n                message: \"Password should contain atleast 1 number.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });     \r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const updatePost = async () => {\r\n        setIsLoading(true);\r\n        if(validatePost()){\r\n            try {\r\n                await dispatch(usersActions.updateProfile(name, email, about, password, base64Data, imageType));\r\n                clearForm();\r\n                props.navigation.navigate('YourProfile', { screen: 'UserProfile' });\r\n                showMessage({\r\n                    message: \"Your profile was successfully edited.\",\r\n                    type: \"success\",\r\n                    duration: 3000,\r\n                    icon: { icon: \"success\", position: 'left' }\r\n                });\r\n            } catch (error) {\r\n                showMessage({\r\n                    message: error.message,\r\n                    type: \"danger\",\r\n                    icon: { icon: \"danger\", position: 'left' }\r\n                });\r\n                console.log(\"ERROR \",error.message);\r\n            }\r\n        } \r\n        setIsLoading(false);\r\n    }\r\n\r\n    const imagePickedHandler = (base64, imageType) => {\r\n        setBase64Data(base64);\r\n        setImageType(imageType);\r\n    }\r\n\r\n    return(\r\n        <ScrollView>\r\n            <KeyboardAvoidingView style={styles.screen} >\r\n                <View style={styles.container}>\r\n                    {/* { error !== null && (\r\n                        <View style={styles.errorMsgContainer} >\r\n                            <Image style={styles.msgIcon} source={{ uri: \"https://i.imgur.com/GnyDvKN.png\" }} />\r\n                            <Text style={styles.msgText}> {error} </Text>\r\n                        </View>\r\n                    )} */}\r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >Profile Photo</Text>\r\n                    </View>\r\n\r\n                    <ImgPicker \r\n                        onImageTaken={imagePickedHandler} \r\n                        editImage={editImage}\r\n                        previousUpdate={previousUpdate}\r\n                    />\r\n                    \r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >Name</Text>\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"Name\"\r\n                            underlineColorAndroid='transparent'\r\n                            value={name}\r\n                            onChangeText={(text) => setName(text) }\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >Email</Text>\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"Email\"\r\n                            underlineColorAndroid='transparent'\r\n                            value={email}\r\n                            onChangeText={(text) => setEmail(text) }\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >About</Text>\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"About\"\r\n                            underlineColorAndroid='transparent'\r\n                            value={about}\r\n                            onChangeText={(text) => setAbout(text) }\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >Password</Text>\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"Password\"\r\n                            secureTextEntry={true}\r\n                            underlineColorAndroid='transparent'\r\n                            value={password}\r\n                            onChangeText={(text) => setPassword(text) }\r\n                        />\r\n                    </View>\r\n\r\n                    <TouchableOpacity \r\n                        style={[styles.buttonContainer, styles.loginButton]}\r\n                        onPress={updatePost}\r\n                    >\r\n\r\n                        { isLoading ? (\r\n                            <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                        )  :(\r\n                            <Text style={styles.loginText}>\r\n                                Update\r\n                            </Text>\r\n                        ) }\r\n                        \r\n                    </TouchableOpacity>\r\n\r\n                    </View>   \r\n                \r\n            </KeyboardAvoidingView>\r\n\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport const screenOptions = {\r\n    headerTitle: 'Edit Profile'\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    errorMsgContainer:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginBottom: 15,\r\n        marginHorizontal: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#D8000C',\r\n        backgroundColor: \"#FFBABA\" ,\r\n        color: \"#D8000C\",\r\n        borderRadius: 25,\r\n    },\r\n    msgText: {\r\n        fontSize: 15,\r\n    },\r\n    msgIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        // marginLeft: 15,\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    labelContainer: {\r\n        alignSelf: 'flex-start',\r\n        marginLeft: 16\r\n    },\r\n    labelText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        padding: 5,\r\n        color: Colors.accent\r\n    },\r\n    inputContainer: {\r\n        // borderBottomColor: '#F5FCFF',\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 30,\r\n        // borderBottomWidth: 1,\r\n        width: 300,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    inputs: {\r\n        height: 45,\r\n        marginLeft: 16,\r\n        borderBottomColor: '#FFFFFF',\r\n        flex: 1,\r\n        paddingRight: 15\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        width: 300,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: Colors.brightBlue,\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n})\r\n\r\nexport default EditProfileScreen;"]},"metadata":{},"sourceType":"module"}
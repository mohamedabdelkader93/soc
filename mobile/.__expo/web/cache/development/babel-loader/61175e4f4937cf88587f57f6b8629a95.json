{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\user\\\\UserStatsScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\nimport ListItem from \"../../components/UI/ListItem\";\nimport Colors from \"../../constants/Colors\";\n\nvar UserStatsScreen = function UserStatsScreen(props) {\n  var route = props.route;\n  var followers = route.params.currUser.followers;\n  var following = route.params.currUser.following;\n\n  var _useState = useState(route.params.activeTab),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState([{\n    key: 'followers',\n    title: \"Followers\",\n    count: followers.length\n  }, {\n    key: 'following',\n    title: \"Following\",\n    count: following.length\n  }]),\n      _useState4 = _slicedToArray(_useState3, 1),\n      routes = _useState4[0];\n\n  var FollowersRoute = function FollowersRoute() {\n    return React.createElement(FlatList, {\n      data: followers,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(user) {\n        return React.createElement(ListItem, {\n          user: user.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var FollowingRoute = function FollowingRoute() {\n    return React.createElement(FlatList, {\n      data: following,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(user) {\n        return React.createElement(ListItem, {\n          user: user.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var initialLayout = {\n    width: Dimensions.get('window').width\n  };\n  var renderScene = SceneMap({\n    followers: FollowersRoute,\n    following: FollowingRoute\n  });\n\n  var renderTabBar = function renderTabBar(props) {\n    return React.createElement(TabBar, _extends({}, props, {\n      renderLabel: function renderLabel(_ref) {\n        var route = _ref.route,\n            focused = _ref.focused,\n            color = _ref.color;\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, route.count), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, \" \", route.title));\n      },\n      indicatorStyle: {\n        backgroundColor: Colors.brightBlue\n      },\n      style: {\n        backgroundColor: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(TabView, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    renderTabBar: renderTabBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  });\n};\n\nexport var screenOptions = {\n  headerTitle: 'Stats'\n};\nexport default UserStatsScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/user/UserStatsScreen.js"],"names":["React","useState","TabView","SceneMap","TabBar","ListItem","Colors","UserStatsScreen","props","route","followers","params","currUser","following","activeTab","index","setIndex","key","title","count","length","routes","FollowersRoute","item","_id","user","FollowingRoute","initialLayout","width","Dimensions","get","renderScene","renderTabBar","focused","color","flexDirection","fontWeight","backgroundColor","brightBlue","screenOptions","headerTitle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, FlatList, Dimensions } from 'react-native';\r\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\r\n\r\nimport ListItem from '../../components/UI/ListItem';\r\nimport Colors from '../../constants/Colors';\r\n\r\nconst UserStatsScreen = (props) => {\r\n    const { route } = props;\r\n    const followers = route.params.currUser.followers;\r\n    const following = route.params.currUser.following;\r\n\r\n    const [index, setIndex] = useState(route.params.activeTab);\r\n    const [routes] = useState([\r\n        { key: 'followers', title: `Followers`, count: followers.length },\r\n        { key: 'following', title: `Following`, count: following.length },\r\n    ]);\r\n    \r\n\r\n    const FollowersRoute = () => (\r\n        <FlatList\r\n            data={followers}\r\n            keyExtractor={(item) => item._id}\r\n            renderItem={(user) => (\r\n                <ListItem user={user.item} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    const FollowingRoute = () => (\r\n        <FlatList\r\n            data={following}\r\n            keyExtractor={(item) => item._id}\r\n            renderItem={(user) => (\r\n                <ListItem user={user.item} />\r\n            )}\r\n        />\r\n    );\r\n    const initialLayout = { width: Dimensions.get('window').width };\r\n    const renderScene = SceneMap({\r\n        followers: FollowersRoute,\r\n        following: FollowingRoute,\r\n    });\r\n\r\n    const renderTabBar = props => (\r\n        <TabBar\r\n            {...props}\r\n            renderLabel={({ route, focused, color }) => (\r\n                <View style={{ flexDirection: 'row' }} >\r\n                    <Text style={{ fontWeight: 'bold' }} >{route.count}</Text>\r\n                    <Text> {route.title}</Text>\r\n                </View>\r\n            )}\r\n            indicatorStyle={{ backgroundColor: Colors.brightBlue }}\r\n            style={{ backgroundColor: '#fff' }}\r\n        />\r\n    );\r\n\r\n    return(\r\n        <TabView\r\n            style={{ backgroundColor: '#fff' }}\r\n            navigationState={{ index , routes }}\r\n            renderScene={renderScene}\r\n            onIndexChange={setIndex}\r\n            initialLayout={initialLayout}\r\n            renderTabBar={renderTabBar}\r\n        />\r\n    );\r\n};\r\n\r\nexport const screenOptions = {\r\n    headerTitle: 'Stats'\r\n}\r\n\r\nexport default UserStatsScreen;"]},"metadata":{},"sourceType":"module"}
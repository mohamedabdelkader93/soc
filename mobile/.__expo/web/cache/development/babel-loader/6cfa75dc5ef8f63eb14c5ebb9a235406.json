{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\post\\\\AllPostsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport Card from \"../../components/UI/Card\";\nimport Colors from \"../../constants/Colors\";\nimport * as postsActions from \"../../store/actions/posts\";\nimport * as usersActions from \"../../store/actions/users\";\nimport * as chatActions from \"../../store/actions/chat\";\n\nvar AllPostsScreen = function AllPostsScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var refPosts = useRef(null);\n  var posts = useSelector(function (state) {\n    return state.posts.allPosts;\n  });\n  var loggedUser = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var loadPosts = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(postsActions.fetchPosts()));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(dispatch(usersActions.fetchUsers()));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(dispatch(chatActions.fetchChatList()));\n\n          case 9:\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 14:\n            setIsRefreshing(false);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n\n  var toggleLikeHandler = function toggleLikeHandler(postId, isLiked) {\n    return _regeneratorRuntime.async(function toggleLikeHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!isLiked) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(postsActions.unlikePost(postId)));\n\n          case 4:\n            _context2.next = 8;\n            break;\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(postsActions.likePost(postId)));\n\n          case 8:\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"ERROR \", _context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    var unsubscribe = navigation.dangerouslyGetParent().addListener('tabPress', function (e) {\n      console.log(\"TAB PRESSED\");\n\n      if (refPosts.current) {\n        refPosts.current.scrollToIndex({\n          animated: true,\n          index: 0\n        });\n      }\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n  useEffect(function () {\n    setIsLoading(true);\n    loadPosts().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadPosts]);\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"An error occured.\"), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadPosts,\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (!isLoading && posts.length === 0) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"No posts found. Maybe start adding some!\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    ref: refPosts,\n    style: styles.list,\n    onRefresh: loadPosts,\n    refreshing: isRefreshing,\n    data: posts,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(View, {\n        style: styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      });\n    },\n    renderItem: function renderItem(post) {\n      console.log(\"posts - \", post.index);\n      return React.createElement(Card, {\n        post: post.item,\n        userId: loggedUser._id,\n        toggleLikeHandler: toggleLikeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: 'SocialApp',\n    headerRight: function headerRight() {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-chatboxes' : 'ios-chatboxes',\n        size: 24,\n        color: Platform.OS === 'android' ? '#fff' : Colors.brightBlue,\n        style: {\n          padding: 15,\n          marginRight: 5\n        },\n        onPress: function onPress() {\n          return navData.navigation.navigate('ChatList');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      });\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  list: {\n    width: '100%'\n  },\n  separator: {\n    marginTop: 10\n  }\n});\nexport default AllPostsScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/post/AllPostsScreen.js"],"names":["React","useState","useCallback","useEffect","useRef","useDispatch","useSelector","useNavigation","Ionicons","Card","Colors","postsActions","usersActions","chatActions","AllPostsScreen","props","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","refPosts","posts","state","allPosts","loggedUser","auth","user","dispatch","navigation","loadPosts","fetchPosts","fetchUsers","fetchChatList","message","toggleLikeHandler","postId","isLiked","unlikePost","likePost","console","log","unsubscribe","dangerouslyGetParent","addListener","e","current","scrollToIndex","animated","index","then","styles","centered","primary","length","screen","list","item","_id","separator","post","screenOptions","navData","headerTitle","headerRight","Platform","OS","brightBlue","padding","marginRight","navigate","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect, useRef} from 'react';\r\nimport { View, Text, StyleSheet, FlatList, ActivityIndicator, Button, Platform, AsyncStorage } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons'\r\n\r\nimport Card from '../../components/UI/Card';\r\nimport Colors from '../../constants/Colors';\r\n\r\nimport * as postsActions from '../../store/actions/posts';\r\nimport * as usersActions from '../../store/actions/users';\r\nimport * as chatActions from '../../store/actions/chat';\r\n\r\n\r\nconst AllPostsScreen = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isRefreshing, setIsRefreshing] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const refPosts = useRef(null);\r\n\r\n    const posts = useSelector(state => state.posts.allPosts);\r\n    const loggedUser = useSelector(state => state.auth.user);\r\n    const dispatch = useDispatch();\r\n    const navigation = useNavigation();\r\n\r\n\r\n    const loadPosts = useCallback(async () => {\r\n        setError(null);\r\n        setIsRefreshing(true);\r\n        try {\r\n            await dispatch(postsActions.fetchPosts());\r\n            await dispatch(usersActions.fetchUsers());\r\n            await dispatch(chatActions.fetchChatList());\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n        setIsRefreshing(false);\r\n    }, [dispatch, setIsLoading, setError])\r\n\r\n    \r\n    const toggleLikeHandler = async (postId, isLiked) => {\r\n        \r\n        try {\r\n            if(isLiked){\r\n                await dispatch(postsActions.unlikePost(postId))\r\n            } else {\r\n                await dispatch(postsActions.likePost(postId))\r\n            }\r\n        } catch (error) {\r\n            console.log(\"ERROR \", error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const unsubscribe = props.navigation.addListener('focus', loadPosts);\r\n\r\n    //     return () => {\r\n    //         unsubscribe();\r\n    //     };\r\n    // }, [loadPosts])\r\n    useEffect(() => {\r\n        const unsubscribe = navigation.dangerouslyGetParent().addListener('tabPress', e => {\r\n            console.log(\"TAB PRESSED\");\r\n            if(refPosts.current){\r\n                refPosts.current.scrollToIndex({ animated: true, index: 0 });\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        loadPosts()\r\n        .then(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }, [dispatch, loadPosts])\r\n\r\n    if(error){\r\n        return (\r\n            <View style={styles.centered} >\r\n                <Text>An error occured.</Text>\r\n                <Button title=\"Try again\" onPress={loadPosts} color={Colors.primary} />\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    if(isLoading){\r\n        return (\r\n            <View style={styles.centered} >\r\n                <ActivityIndicator size='large' color={Colors.primary} />\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    if(!isLoading && posts.length === 0){\r\n        return(\r\n            <View style={styles.centered} >\r\n                <Text>No posts found. Maybe start adding some!</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.screen} >\r\n            <FlatList\r\n                ref={refPosts}\r\n                style={styles.list}\r\n                onRefresh={loadPosts}\r\n                refreshing={isRefreshing}\r\n                data={posts}\r\n                keyExtractor={(item) => item._id }\r\n                ItemSeparatorComponent={() => {\r\n                    return (\r\n                        <View style={styles.separator} />\r\n                    )\r\n                }}\r\n                renderItem={(post) => {\r\n                    console.log(\"posts - \",post.index);\r\n                    return (\r\n                        <Card post={post.item} userId={loggedUser._id} toggleLikeHandler={toggleLikeHandler} />\r\n                    )\r\n                }} \r\n            />\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport const screenOptions = (navData) => {\r\n    return{\r\n        headerTitle: 'SocialApp',\r\n        headerRight: () => (\r\n            <Ionicons\r\n                name={Platform.OS === 'android' ? 'md-chatboxes' : 'ios-chatboxes'}\r\n                size = {24}\r\n                color={Platform.OS === 'android' ? '#fff' : Colors.brightBlue}\r\n                style={{  padding: 15, marginRight: 5 }}\r\n                onPress={() => navData.navigation.navigate('ChatList')}\r\n            />\r\n        )\r\n    };\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white'\r\n    },\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    list: {\r\n        width: '100%',\r\n    },\r\n    separator: {\r\n        marginTop: 10,\r\n    },\r\n\r\n})\r\n\r\nexport default AllPostsScreen;"]},"metadata":{},"sourceType":"module"}
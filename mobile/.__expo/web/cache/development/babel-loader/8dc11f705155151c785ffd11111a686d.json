{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\post\\\\AddPostScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useDispatch } from 'react-redux';\nimport * as postActions from \"../../store/actions/posts\";\nimport ImgPicker from \"../../components/app/ImgPicker\";\nimport Colors from \"../../constants/Colors\";\nimport { showMessage } from \"react-native-flash-message\";\n\nvar AddPostScreen = function AddPostScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      clearPickedImage = _useState2[0],\n      setClearPickedImage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      body = _useState6[0],\n      setBody = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      base64Data = _useState8[0],\n      setBase64Data = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imageType = _useState10[0],\n      setImageType = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isLoading = _useState12[0],\n      setIsLoading = _useState12[1];\n\n  var dispatch = useDispatch();\n\n  var clearForm = function clearForm() {\n    setClearPickedImage(true);\n    setTitle('');\n    setBody('');\n    setBase64Data('');\n    setImageType('');\n    setIsLoading(false);\n  };\n\n  useEffect(function () {\n    var unsubscribe = props.navigation.addListener('focus', clearForm);\n    return function () {\n      unsubscribe();\n    };\n  }, [clearForm]);\n\n  var validatePost = function validatePost() {\n    var strLength = base64Data.length;\n    var sizeInBytes = 4 * Math.ceil(strLength / 3) * 0.5624896334383812;\n    var sizeInKb = sizeInBytes / 1000;\n    console.log(sizeInKb);\n\n    if (sizeInKb > 100) {\n      showMessage({\n        message: \"Image size should be less than 150KB.\",\n        type: \"danger\",\n        duration: 3000,\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (!title || title.length === 0) {\n      showMessage({\n        message: \"Please enter a title.\",\n        type: \"danger\",\n        duration: 3000,\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (!body || body.length === 0) {\n      showMessage({\n        message: \"Please enter a body.\",\n        type: \"danger\",\n        duration: 3000,\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    if (base64Data.length === 0) {\n      showMessage({\n        message: \"Please select an image to post.\",\n        type: \"danger\",\n        duration: 3000,\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        }\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  var createPost = function createPost() {\n    return _regeneratorRuntime.async(function createPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!validatePost()) {\n              _context.next = 15;\n              break;\n            }\n\n            console.log(\"VALID POST\");\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(postActions.createPost(title, body, base64Data, imageType)));\n\n          case 6:\n            clearForm();\n            props.navigation.navigate('AllPosts');\n            showMessage({\n              message: \"Your post was successfully created.\",\n              type: \"success\",\n              duration: 3000,\n              icon: {\n                icon: \"success\",\n                position: 'left'\n              }\n            });\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n            showMessage({\n              message: _context.t0.message,\n              type: \"danger\",\n              duration: 3000,\n              icon: {\n                icon: \"danger\",\n                position: 'left'\n              }\n            });\n            console.log(\"ERROR \", _context.t0.message);\n\n          case 15:\n            setIsLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 11]], Promise);\n  };\n\n  var imagePickedHandler = function imagePickedHandler(base64, imageType) {\n    setBase64Data(base64);\n    setImageType(imageType);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.screen,\n    behavior: \"padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, React.createElement(ImgPicker, {\n    onImageTaken: imagePickedHandler,\n    clearPickedImage: clearPickedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"Title\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Title\",\n    underlineColorAndroid: \"transparent\",\n    value: title,\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, \"Body\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Body\",\n    underlineColorAndroid: \"transparent\",\n    value: body,\n    onChangeText: function onChangeText(text) {\n      return setBody(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: createPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }) : React.createElement(Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, \"Post\")))));\n};\n\nexport var screenOptions = {\n  headerTitle: 'Create Post'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  errorMsgContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 15,\n    marginHorizontal: 20,\n    borderWidth: 1,\n    borderColor: '#D8000C',\n    backgroundColor: \"#FFBABA\",\n    color: \"#D8000C\",\n    borderRadius: 25\n  },\n  msgText: {\n    fontSize: 15\n  },\n  msgIcon: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center'\n  },\n  labelContainer: {\n    alignSelf: 'flex-start',\n    marginLeft: 16\n  },\n  labelText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    padding: 5,\n    color: Colors.accent\n  },\n  inputContainer: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1,\n    paddingRight: 15\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: Colors.brightBlue,\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 10\n  },\n  loginText: {\n    color: 'white'\n  }\n});\nexport default AddPostScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/post/AddPostScreen.js"],"names":["React","useEffect","useState","useDispatch","postActions","ImgPicker","Colors","showMessage","AddPostScreen","props","clearPickedImage","setClearPickedImage","title","setTitle","body","setBody","base64Data","setBase64Data","imageType","setImageType","isLoading","setIsLoading","dispatch","clearForm","unsubscribe","navigation","addListener","validatePost","strLength","length","sizeInBytes","Math","ceil","sizeInKb","console","log","message","type","duration","icon","position","createPost","navigate","imagePickedHandler","base64","styles","screen","container","labelContainer","labelText","inputContainer","inputs","text","buttonContainer","loginButton","loginText","screenOptions","headerTitle","StyleSheet","create","flex","justifyContent","alignItems","marginTop","errorMsgContainer","display","flexDirection","padding","marginBottom","marginHorizontal","borderWidth","borderColor","backgroundColor","color","borderRadius","msgText","fontSize","msgIcon","width","height","alignSelf","marginLeft","fontWeight","accent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderBottomColor","paddingRight","brightBlue"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    StyleSheet, \r\n    TextInput, \r\n    TouchableOpacity, \r\n    ActivityIndicator, \r\n    KeyboardAvoidingView, \r\n    ScrollView \r\n} from 'react-native';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport * as postActions from '../../store/actions/posts';\r\nimport ImgPicker from '../../components/app/ImgPicker';\r\nimport Colors from '../../constants/Colors';\r\nimport { showMessage } from \"react-native-flash-message\";\r\n\r\nconst AddPostScreen = (props) => {\r\n\r\n    const [clearPickedImage, setClearPickedImage ] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [base64Data, setBase64Data] = useState('');\r\n    const [imageType, setImageType] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const clearForm = () => {\r\n        setClearPickedImage(true);\r\n        setTitle('');\r\n        setBody('');\r\n        setBase64Data('');\r\n        setImageType('');\r\n        setIsLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = props.navigation.addListener('focus', clearForm);\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [clearForm])\r\n\r\n    const validatePost = () => {\r\n        let strLength = base64Data.length;\r\n        let sizeInBytes = 4 * Math.ceil((strLength / 3))*0.5624896334383812;\r\n        let sizeInKb = sizeInBytes/1000;\r\n        console.log(sizeInKb);\r\n        if(sizeInKb > 100){\r\n            showMessage({\r\n                message: \"Image size should be less than 150KB.\",\r\n                type: \"danger\",\r\n                duration: 3000,\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n\r\n\r\n        if(!title || title.length === 0){\r\n            showMessage({\r\n                message: \"Please enter a title.\",\r\n                type: \"danger\",\r\n                duration: 3000,\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n        if(!body || body.length === 0){\r\n            showMessage({\r\n                message: \"Please enter a body.\",\r\n                type: \"danger\",\r\n                duration: 3000,\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n        if(base64Data.length === 0 ){\r\n            showMessage({\r\n                message: \"Please select an image to post.\",\r\n                type: \"danger\",\r\n                duration: 3000,\r\n                icon: { icon: \"danger\", position: 'left' }\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const createPost = async () => {\r\n        setIsLoading(true);\r\n        if(validatePost()){\r\n            console.log(\"VALID POST\")\r\n            try {\r\n                await dispatch(postActions.createPost(title, body, base64Data, imageType));\r\n                clearForm();\r\n                props.navigation.navigate('AllPosts')\r\n                showMessage({\r\n                    message: \"Your post was successfully created.\",\r\n                    type: \"success\",\r\n                    duration: 3000,\r\n                    icon: { icon: \"success\", position: 'left' }\r\n                });\r\n            } catch (error) {\r\n                showMessage({\r\n                    message: error.message,\r\n                    type: \"danger\",\r\n                    duration: 3000,\r\n                    icon: { icon: \"danger\", position: 'left' }\r\n                });\r\n                console.log(\"ERROR \",error.message);\r\n            }\r\n        } \r\n        setIsLoading(false);\r\n    }\r\n\r\n    const imagePickedHandler = (base64, imageType) => {\r\n        setBase64Data(base64);\r\n        setImageType(imageType);\r\n    }\r\n\r\n    return(\r\n        <ScrollView  >\r\n            <KeyboardAvoidingView style={styles.screen} behavior=\"padding\" >\r\n                <View style={styles.container}>\r\n                    {/* { error !== null && (\r\n                        <View style={styles.errorMsgContainer} >\r\n                            <Image style={styles.msgIcon} source={{ uri: \"https://i.imgur.com/GnyDvKN.png\" }} />\r\n                            <Text style={styles.msgText}> {error} </Text>\r\n                        </View>\r\n                    )} */}\r\n                    <ImgPicker \r\n                        onImageTaken={imagePickedHandler}\r\n                        clearPickedImage={clearPickedImage}\r\n                    />\r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >Title</Text>\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"Title\"\r\n                            underlineColorAndroid='transparent'\r\n                            value={title}\r\n                            onChangeText={(text) => setTitle(text) }\r\n                        />\r\n                    </View>\r\n                    <View style={styles.labelContainer} >\r\n                        <Text style={styles.labelText} >Body</Text>\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"Body\"\r\n                            underlineColorAndroid='transparent'\r\n                            value={body}\r\n                            onChangeText={(text) => setBody(text) }\r\n                        />\r\n                    </View>\r\n                    <TouchableOpacity \r\n                        style={[styles.buttonContainer, styles.loginButton]}\r\n                        onPress={createPost}\r\n                    >\r\n                        { isLoading ? (\r\n                            <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                        )  :(\r\n                            <Text style={styles.loginText}>\r\n                                Post\r\n                            </Text>\r\n                        ) }\r\n                        \r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport const screenOptions = {\r\n    headerTitle: 'Create Post'\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    errorMsgContainer:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginBottom: 15,\r\n        marginHorizontal: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#D8000C',\r\n        backgroundColor: \"#FFBABA\" ,\r\n        color: \"#D8000C\",\r\n        borderRadius: 25,\r\n    },\r\n    msgText: {\r\n        fontSize: 15,\r\n    },\r\n    msgIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        // marginLeft: 15,\r\n        justifyContent: 'center'\r\n    },\r\n    labelContainer: {\r\n        alignSelf: 'flex-start',\r\n        marginLeft: 16\r\n    },\r\n    labelText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        padding: 5,\r\n        color: Colors.accent\r\n    },\r\n    inputContainer: {\r\n        // borderBottomColor: '#F5FCFF',\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 30,\r\n        // borderBottomWidth: 1,\r\n        width: 300,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    inputs: {\r\n        height: 45,\r\n        marginLeft: 16,\r\n        borderBottomColor: '#FFFFFF',\r\n        flex: 1,\r\n        paddingRight: 15\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        width: 300,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: Colors.brightBlue,\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 10,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n})\r\n\r\nexport default AddPostScreen;"]},"metadata":{},"sourceType":"module"}
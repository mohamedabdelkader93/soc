{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\auth\\\\ForgotPasswordScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { showMessage } from \"react-native-flash-message\";\nimport * as authActions from \"../../store/actions/auth\";\nimport { useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var validateAuthForm = function validateAuthForm() {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!emailRegex.test(email.toLowerCase())) {\n      showMessage({\n        message: \"Please enter a valid email.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  var AuthHandler = function AuthHandler() {\n    var msg;\n    return _regeneratorRuntime.async(function AuthHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!validateAuthForm()) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(authActions.forgotPassword(email)));\n\n          case 5:\n            msg = _context.sent;\n            showMessage({\n              message: msg,\n              type: \"success\",\n              icon: {\n                icon: \"success\",\n                position: 'left'\n              },\n              duration: 4000\n            });\n            setEmail('');\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            showMessage({\n              message: _context.t0.message,\n              type: \"danger\",\n              icon: {\n                icon: \"danger\",\n                position: 'left'\n              },\n              duration: 3000\n            });\n\n          case 13:\n            setIsLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.bgImage,\n    source: require(\"../../assets/bg-auth.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/email.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: AuthHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }) : React.createElement(Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Send Password Reset Link\")));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: 'Reset Password'\n  };\n};\nvar resizeMode = 'center';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  errorMsgContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 15,\n    marginHorizontal: 20,\n    borderWidth: 1,\n    borderColor: '#D8000C',\n    backgroundColor: \"#FFBABA\",\n    color: \"#D8000C\",\n    borderRadius: 25\n  },\n  successMsgContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 15,\n    marginHorizontal: 20,\n    borderWidth: 1,\n    borderColor: '#4F8A10',\n    backgroundColor: \"#DFF2BF\",\n    color: \"#4F8A10\",\n    borderRadius: 25\n  },\n  msgText: {\n    fontSize: 15\n  },\n  msgIcon: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  registerButton: {\n    backgroundColor: Colors.lightPrimary,\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  },\n  bgImage: {\n    flex: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: 'bold'\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/auth/ForgotPasswordScreen.js"],"names":["React","useState","showMessage","authActions","useDispatch","Colors","ForgotPasswordScreen","email","setEmail","isLoading","setIsLoading","dispatch","validateAuthForm","emailRegex","test","toLowerCase","message","type","icon","position","duration","AuthHandler","forgotPassword","msg","styles","container","bgImage","require","inputContainer","inputs","text","inputIcon","uri","buttonContainer","loginButton","loginText","screenOptions","navData","headerTitle","resizeMode","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","errorMsgContainer","display","flexDirection","padding","marginBottom","marginHorizontal","borderWidth","borderColor","color","borderRadius","successMsgContainer","msgText","fontSize","msgIcon","width","height","borderBottomColor","borderBottomWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","marginRight","btnForgotPassword","registerButton","lightPrimary","btnText","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\n\r\nimport { showMessage } from \"react-native-flash-message\";\r\n\r\nimport * as authActions from '../../store/actions/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport Colors from '../../constants/Colors';\r\n\r\nconst ForgotPasswordScreen = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const validateAuthForm = () => {\r\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!emailRegex.test(email.toLowerCase())){\r\n            showMessage({\r\n                message: \"Please enter a valid email.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n\r\n    const AuthHandler = async () => {\r\n        setIsLoading(true);\r\n        if(validateAuthForm()){\r\n            try {\r\n                const msg = await dispatch(authActions.forgotPassword(email))\r\n                showMessage({\r\n                    message: msg,\r\n                    type: \"success\",\r\n                    icon: { icon: \"success\", position: 'left' },\r\n                    duration: 4000\r\n                });\r\n                setEmail('');\r\n            } catch (error) {\r\n                showMessage({\r\n                    message: error.message,\r\n                    type: \"danger\",\r\n                    icon: { icon: \"danger\", position: 'left' },\r\n                    duration: 3000\r\n                });\r\n            }\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n            <View style={styles.container}>\r\n                <Image style={styles.bgImage} source={require('../../assets/bg-auth.png')} />\r\n                {/* { error !== null && (\r\n                    <View style={styles.errorMsgContainer} >\r\n                        <Image style={styles.msgIcon} source={{ uri: \"https://i.imgur.com/GnyDvKN.png\" }} />\r\n                        <Text style={styles.msgText}> {error} </Text>\r\n                    </View>\r\n                )} */}\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput style={styles.inputs}\r\n                        placeholder=\"Email\"\r\n                        keyboardType=\"email-address\"\r\n                        underlineColorAndroid='transparent'\r\n                        value={email}\r\n                        onChangeText={(text) => setEmail(text)}\r\n                    />\r\n                    <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/nolan/40/000000/email.png' }} />\r\n                </View>\r\n\r\n                <TouchableOpacity \r\n                    style={[styles.buttonContainer, styles.loginButton]}\r\n                    onPress={AuthHandler}\r\n                >\r\n\r\n                    { isLoading ? (\r\n                        <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                    )  :(\r\n                        <Text style={styles.loginText}>\r\n                            Send Password Reset Link\r\n                        </Text>\r\n                    ) }\r\n                    \r\n                </TouchableOpacity>\r\n            </View>    \r\n    );\r\n}\r\n\r\n\r\nexport const screenOptions = (navData) => {\r\n    return{\r\n        headerTitle: 'Reset Password',\r\n        \r\n    }\r\n}\r\n\r\nconst resizeMode = 'center';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#DCDCDC',\r\n    },\r\n    errorMsgContainer:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginBottom: 15,\r\n        marginHorizontal: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#D8000C',\r\n        backgroundColor: \"#FFBABA\" ,\r\n        color: \"#D8000C\",\r\n        borderRadius: 25,\r\n    },\r\n    successMsgContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginBottom: 15,\r\n        marginHorizontal: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#4F8A10',\r\n        backgroundColor: \"#DFF2BF\" ,\r\n        color: \"#4F8A10\",\r\n        borderRadius: 25,\r\n        \r\n    },\r\n    msgText: {\r\n        fontSize: 15,\r\n    },\r\n    msgIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        // marginLeft: 15,\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    inputContainer: {\r\n        borderBottomColor: '#F5FCFF',\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 30,\r\n        borderBottomWidth: 1,\r\n        width: 300,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n\r\n        elevation: 5,\r\n    },\r\n    inputs: {\r\n        height: 45,\r\n        marginLeft: 16,\r\n        borderBottomColor: '#FFFFFF',\r\n        flex: 1,\r\n    },\r\n    inputIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        marginRight: 15,\r\n        justifyContent: 'center'\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        width: 300,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    btnForgotPassword: {\r\n        height: 15,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginBottom: 10,\r\n        width: 300,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: \"#00b5ec\",\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    registerButton: {\r\n        backgroundColor: Colors.lightPrimary,\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n    bgImage: {\r\n        flex: 1,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n    },\r\n    btnText: {\r\n        color: \"white\",\r\n        fontWeight: 'bold'\r\n    }\r\n}); \r\n\r\n\r\nexport default ForgotPasswordScreen;"]},"metadata":{},"sourceType":"module"}
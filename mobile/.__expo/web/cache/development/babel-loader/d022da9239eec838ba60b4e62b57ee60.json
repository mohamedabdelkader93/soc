{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\user\\\\UserProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Container, Content, Button } from 'native-base';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nimport { Octicons } from '@expo/vector-icons';\nimport Colors from \"../../constants/Colors\";\nimport * as usersActions from \"../../store/actions/users\";\nimport * as postsActions from \"../../store/actions/posts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ENV from \"../../env\";\nimport MenuItem from \"../../components/UI/MenuItem\";\nimport { showMessage } from \"react-native-flash-message\";\nimport VerifiedUser from \"../../constants/VerifiedUser\";\n\nvar UserProfileScreen = function UserProfileScreen(props) {\n  var route = props.route;\n  var loggedInUserId = useSelector(function (state) {\n    return state.auth.user._id;\n  });\n  var allUsers = useSelector(function (state) {\n    return state.users.allUsers;\n  });\n  var loggedInUser = allUsers.filter(function (u) {\n    return u._id === loggedInUserId;\n  })[0];\n  var userId;\n\n  if (route.params && route.params.userId) {\n    userId = route.params.userId;\n  } else {\n    userId = useSelector(function (state) {\n      return state.auth.user._id;\n    });\n  }\n\n  var users = useSelector(function (state) {\n    return state.users.allUsers;\n  });\n  var posts = useSelector(function (state) {\n    return state.posts.allPosts;\n  });\n  var currUser = users.filter(function (u) {\n    return u._id === userId;\n  })[0];\n  var currUserPosts = posts.filter(function (p) {\n    return p.postedBy._id === userId;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isRefreshing = _useState2[0],\n      setIsRefreshing = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isFollowLoading = _useState6[0],\n      setIsFollowLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUri = _useState8[0],\n      setImageUri = _useState8[1];\n\n  var dispatch = useDispatch();\n  var loadUsers = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsRefreshing(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(usersActions.fetchUsers()));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(postsActions.fetchPosts()));\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n            setIsRefreshing(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  }, [dispatch, setIsLoading]);\n\n  var onImageErrorHandler = function onImageErrorHandler() {\n    setImageUri(ENV.defaultImageUri);\n  };\n\n  var checkFollow = function checkFollow(userId) {\n    var isFollowed = loggedInUser.following.filter(function (f) {\n      return f._id === userId;\n    }).length !== 0;\n    return isFollowed;\n  };\n\n  var followUserHandler = function followUserHandler() {\n    var user;\n    return _regeneratorRuntime.async(function followUserHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            user = _objectSpread({}, currUser);\n            delete user.created;\n            delete user.followers;\n            delete user.following;\n\n            if (!checkFollow(user._id)) {\n              _context2.next = 10;\n              break;\n            }\n\n            showMessage({\n              message: \"Your have unfollowed \" + user.name + \".\",\n              type: \"warning\",\n              duration: 3000,\n              icon: {\n                icon: \"warning\",\n                position: 'left'\n              }\n            });\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(usersActions.unfollowUser(user)));\n\n          case 8:\n            _context2.next = 13;\n            break;\n\n          case 10:\n            showMessage({\n              message: \"Your are now following \" + user.name + \".\",\n              type: \"success\",\n              duration: 3000,\n              icon: {\n                icon: \"success\",\n                position: 'left'\n              }\n            });\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(dispatch(usersActions.followUser(user)));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderSectionOne = function renderSectionOne() {\n    if (currUserPosts.length === 0) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderTopColor: '#c2c2c2',\n          borderTopWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"No Posts\"), currUser._id === loggedInUserId && React.createElement(Button, {\n        style: {\n          backgroundColor: Colors.brightBlue,\n          padding: 10,\n          borderRadius: 25,\n          marginTop: 15\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate('AddPost');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, \"Create Post\")));\n    }\n\n    return currUserPosts.map(function (post, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          return props.navigation.navigate('UserPosts', {\n            userId: userId,\n            postIndex: index,\n            fromUserProfile: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [{\n          width: width / 3\n        }, {\n          height: width / 3\n        }, {\n          marginBottom: 2\n        }, index % 3 !== 0 ? {\n          paddingLeft: 2\n        } : {\n          paddingLeft: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: {\n          flex: 1,\n          alignSelf: 'stretch',\n          width: undefined,\n          height: undefined,\n          backgroundColor: '#c2c2c2'\n        },\n        source: post.updated ? {\n          uri: ENV.apiUrl + \"/post/photo/\" + post._id + \"?\" + new Date(post.updated)\n        } : {\n          uri: ENV.apiUrl + \"/post/photo/\" + post._id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      })));\n    });\n  };\n\n  var renderSection = function renderSection() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, renderSectionOne());\n  };\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  var TouchableComp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableComp = TouchableNativeFeedback;\n  }\n\n  return React.createElement(Container, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, React.createElement(Content, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: loadUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageUri || ENV.apiUrl + \"/user/photo/\" + currUser._id + \"?\" + new Date(currUser.updated)\n    },\n    onError: onImageErrorHandler,\n    style: {\n      width: 75,\n      height: 75,\n      borderRadius: 37.5,\n      backgroundColor: \"#c2c2c2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableComp, {\n    background: Platform.OS === 'ios' ? undefined : TouchableNativeFeedback.Ripple('#c2c2c2', true),\n    onPress: function onPress() {\n      return props.navigation.navigate('UserPosts', {\n        userId: userId,\n        postIndex: 0,\n        fromUserProfile: true\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 45\n    }\n  }, currUserPosts.length), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 45\n    }\n  }, \"Posts\")))), React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableComp, {\n    background: Platform.OS === 'ios' ? undefined : TouchableNativeFeedback.Ripple('#c2c2c2', true),\n    onPress: function onPress() {\n      return props.navigation.navigate('UserStats', {\n        activeTab: 0,\n        currUser: currUser\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 45\n    }\n  }, currUser.followers.length), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 45\n    }\n  }, \"Followers\")))), React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableComp, {\n    background: Platform.OS === 'ios' ? undefined : TouchableNativeFeedback.Ripple('#c2c2c2', true),\n    onPress: function onPress() {\n      return props.navigation.navigate('UserStats', {\n        activeTab: 1,\n        currUser: currUser\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 45\n    }\n  }, currUser.following.length), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }, \"Following\"))))), userId === loggedInUserId ? React.createElement(View, {\n    style: {\n      alignItems: 'flex-start',\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate('EditProfile');\n    },\n    bordered: true,\n    dark: true,\n    style: {\n      flex: 1,\n      marginLeft: 10,\n      marginRight: 10,\n      justifyContent: 'center',\n      height: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 45\n    }\n  }, \"Edit Profile\")))) : React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, React.createElement(Button, {\n    onPress: followUserHandler,\n    bordered: true,\n    dark: true,\n    style: {\n      flex: 2,\n      marginLeft: 10,\n      marginRight: 10,\n      justifyContent: 'center',\n      height: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 41\n    }\n  }, checkFollow(currUser._id) ? React.createElement(React.Fragment, null, isFollowLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 57\n    }\n  }) : React.createElement(Text, {\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 57\n    }\n  }, \"Unfollow\")) : React.createElement(React.Fragment, null, isFollowLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 57\n    }\n  }) : React.createElement(Text, {\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 57\n    }\n  }, \"Follow\"))))))), React.createElement(View, {\n    style: {\n      paddingBottom: 10,\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }, currUser.name + \" \", VerifiedUser.verifiedUsersId.includes(currUser._id) && React.createElement(Octicons, {\n    name: \"verified\",\n    size: 20,\n    color: Colors.brightBlue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 92\n    }\n  })), currUser.about && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }, currUser.about, \" \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }, currUser.email)))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, renderSection())));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  var routeParams = navData.route.params ? navData.route.params : {};\n\n  if (!routeParams.name) {\n    return {\n      headerTitle: routeParams.name ? routeParams.name : \"Profile\",\n      headerRight: function headerRight() {\n        return React.createElement(MenuItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }\n        });\n      }\n    };\n  } else {\n    return {\n      headerTitle: routeParams.name ? routeParams.name : \"Profile\"\n    };\n  }\n};\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  }\n});\nexport default UserProfileScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/user/UserProfileScreen.js"],"names":["React","useCallback","useState","Container","Content","Button","Dimensions","get","height","width","Octicons","Colors","usersActions","postsActions","useDispatch","useSelector","ENV","MenuItem","showMessage","VerifiedUser","UserProfileScreen","props","route","loggedInUserId","state","auth","user","_id","allUsers","users","loggedInUser","filter","u","userId","params","posts","allPosts","currUser","currUserPosts","p","postedBy","isRefreshing","setIsRefreshing","isLoading","setIsLoading","isFollowLoading","setIsFollowLoading","imageUri","setImageUri","dispatch","loadUsers","fetchUsers","fetchPosts","console","log","onImageErrorHandler","defaultImageUri","checkFollow","isFollowed","following","f","length","followUserHandler","created","followers","message","name","type","duration","icon","position","unfollowUser","followUser","renderSectionOne","flex","justifyContent","alignItems","borderTopColor","borderTopWidth","fontSize","fontWeight","marginTop","backgroundColor","brightBlue","padding","borderRadius","navigation","navigate","color","map","post","index","postIndex","fromUserProfile","marginBottom","paddingLeft","alignSelf","undefined","updated","uri","apiUrl","Date","renderSection","flexDirection","flexWrap","styles","centered","primary","TouchableComp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","container","paddingTop","Ripple","activeTab","marginLeft","marginRight","paddingBottom","paddingHorizontal","verifiedUsersId","includes","about","email","screenOptions","navData","routeParams","headerTitle","headerRight","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    Dimensions,\r\n    RefreshControl,\r\n    ActivityIndicator,\r\n    TouchableOpacity,\r\n    TouchableNativeFeedback,\r\n    Platform,\r\n    \r\n} from \"react-native\";\r\n\r\nimport { Container, Content, Button } from 'native-base'\r\nvar { height, width } = Dimensions.get('window');\r\nimport { Octicons } from '@expo/vector-icons';\r\n\r\n\r\nimport Colors from '../../constants/Colors';\r\n\r\nimport * as usersActions from '../../store/actions/users';\r\nimport * as postsActions from '../../store/actions/posts';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ENV from '../../env';\r\nimport MenuItem from \"../../components/UI/MenuItem\";\r\nimport { showMessage } from \"react-native-flash-message\";\r\nimport VerifiedUser from \"../../constants/VerifiedUser\";\r\n\r\n\r\nconst UserProfileScreen = (props) => {\r\n    const { route } = props;\r\n    const loggedInUserId = useSelector(state => state.auth.user._id);\r\n    const allUsers = useSelector(state => state.users.allUsers);\r\n    const loggedInUser = allUsers.filter(u => u._id === loggedInUserId)[0];\r\n\r\n    let userId;\r\n\r\n    if(route.params && route.params.userId){\r\n        userId = route.params.userId;\r\n    } else {\r\n        userId = useSelector(state => state.auth.user._id);\r\n    }\r\n    \r\n    const users = useSelector(state => state.users.allUsers);\r\n    const posts = useSelector(state => state.posts.allPosts);\r\n    const currUser = users.filter(u => u._id === userId)[0];\r\n    const currUserPosts = posts.filter(p => p.postedBy._id === userId);\r\n    \r\n    const [isRefreshing,setIsRefreshing] = useState(false);\r\n    const [isLoading,  setIsLoading] = useState(false);\r\n    const [isFollowLoading,  setIsFollowLoading] = useState(false);\r\n    const [imageUri, setImageUri] = useState('');\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const loadUsers = useCallback(async () => {\r\n        setIsRefreshing(true);\r\n        try {\r\n            await dispatch(usersActions.fetchUsers());\r\n            await dispatch(postsActions.fetchPosts());\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setIsRefreshing(false);\r\n    }, [dispatch, setIsLoading]);\r\n\r\n    const onImageErrorHandler = () => {\r\n        setImageUri(ENV.defaultImageUri)\r\n    }\r\n\r\n\r\n    const checkFollow = (userId) => {\r\n        const isFollowed = loggedInUser.following.filter(f => f._id === userId).length !== 0;\r\n        return isFollowed;\r\n    }\r\n\r\n    const followUserHandler = async () => {\r\n        let user = {...currUser};\r\n        delete user.created;\r\n        delete user.followers;\r\n        delete user.following;\r\n        // setIsFollowLoading(true);\r\n        \r\n        if(checkFollow(user._id)){\r\n            showMessage({\r\n                message: `Your have unfollowed ${user.name}.`,\r\n                type: \"warning\",\r\n                duration: 3000,\r\n                icon: { icon: \"warning\", position: 'left' }\r\n            });\r\n            await dispatch(usersActions.unfollowUser(user))\r\n        } else {\r\n            showMessage({\r\n                message: `Your are now following ${user.name}.`,\r\n                type: \"success\",\r\n                duration: 3000,\r\n                icon: { icon: \"success\", position: 'left' }\r\n            });\r\n            await dispatch(usersActions.followUser(user))\r\n        }\r\n        // setIsFollowLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const renderSectionOne = () => {\r\n        if(currUserPosts.length === 0 ){\r\n            return(\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderTopColor: '#c2c2c2', borderTopWidth: 1 }} >   \r\n                    <Text style={{ fontSize: 20, fontWeight: 'bold', marginTop: 25 }} >No Posts</Text>\r\n                    { currUser._id === loggedInUserId && (\r\n                        <Button\r\n                            style={{ backgroundColor: Colors.brightBlue, padding: 10, borderRadius: 25, marginTop: 15 }}\r\n                            onPress={() => props.navigation.navigate('AddPost')}\r\n                        >\r\n                            <Text style={{ color: '#fff' }} >Create Post</Text>\r\n                        </Button>\r\n                    ) }\r\n                    \r\n                </View>\r\n            )\r\n        }\r\n        return currUserPosts.map((post, index) => {\r\n            return (\r\n                <TouchableOpacity \r\n                    key={index}\r\n                    onPress={() => props.navigation.navigate('UserPosts', { userId: userId, postIndex: index, fromUserProfile: true })}\r\n                >\r\n                    <View  style={[{ width: (width) / 3 }, { height: (width) / 3 }, { marginBottom: 2 }, index % 3 !== 0 ? { paddingLeft: 2 } : { paddingLeft: 0 }]}>\r\n                        <Image \r\n                            style={{\r\n                                flex: 1,\r\n                                alignSelf: 'stretch',\r\n                                width: undefined,\r\n                                height: undefined,\r\n                                backgroundColor: '#c2c2c2'\r\n                            }}\r\n                            source={\r\n                                post.updated ? (\r\n                                    { uri: `${ENV.apiUrl}/post/photo/${post._id}?${new Date(post.updated)}` }\r\n                                ) : (\r\n                                    { uri: `${ENV.apiUrl}/post/photo/${post._id}` }\r\n                                )\r\n                            }\r\n                        />\r\n                    </View>\r\n                </TouchableOpacity>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderSection = () => {\r\n            return (\r\n                <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                    {renderSectionOne()}\r\n                </View>\r\n            )\r\n    }\r\n\r\n\r\n    if(isLoading){\r\n        return (\r\n            <View style={styles.centered} >\r\n                <ActivityIndicator size='large' color={Colors.primary} />\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    let TouchableComp = TouchableOpacity;\r\n    if(Platform.OS === 'android' && Platform.Version >= 21){\r\n        TouchableComp = TouchableNativeFeedback;\r\n    }\r\n\r\n\r\n    return (\r\n        <Container style={styles.container} >\r\n            <Content \r\n                refreshControl={\r\n                    <RefreshControl refreshing={isRefreshing} onRefresh={loadUsers} /> \r\n                } \r\n            >\r\n                <View style={{ paddingTop: 20 }}>\r\n                    {/** User Photo Stats**/}\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        {/**User photo takes 1/3rd of view horizontally **/}\r\n                        <View\r\n                            style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-start' }}>\r\n                            <Image \r\n                                source={{ uri: imageUri || `${ENV.apiUrl}/user/photo/${currUser._id}?${new Date(currUser.updated)}` }}\r\n                                onError={onImageErrorHandler}\r\n                                style={{ width: 75, height: 75, borderRadius: 37.5, backgroundColor: \"#c2c2c2\" }}\r\n                            />\r\n                        </View>\r\n                        {/**User Stats take 2/3rd of view horizontally **/}\r\n                        <View style={{ flex: 3 }}>\r\n                            {/** Stats **/}\r\n                            <View\r\n                                style={{\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-around',\r\n                                    alignItems: 'flex-end'\r\n                                }}\r\n                            >\r\n                                <View style={{ alignItems: 'center' }}>\r\n                                    <TouchableComp\r\n                                        background={ Platform.OS === 'ios' ? undefined : TouchableNativeFeedback.Ripple('#c2c2c2', true) }\r\n                                        onPress={() => props.navigation.navigate(\r\n                                            'UserPosts', \r\n                                            { userId: userId, postIndex: 0, fromUserProfile: true }\r\n                                        )}\r\n                                    >\r\n                                        <View style={{ justifyContent: 'center', alignItems: 'center' }} >\r\n                                            <Text style={{ fontSize: 18 }} >{currUserPosts.length}</Text>\r\n                                            <Text style={{ fontSize: 12, color: 'grey' }}>Posts</Text>\r\n                                        </View>\r\n                                    </TouchableComp>\r\n                                </View>\r\n\r\n                                <View style={{ alignItems: 'center' }}>\r\n                                    <TouchableComp\r\n                                        background={ Platform.OS === 'ios' ? undefined : TouchableNativeFeedback.Ripple('#c2c2c2', true) }\r\n                                        onPress={() => props.navigation.navigate(\r\n                                            'UserStats',\r\n                                            { activeTab: 0, currUser: currUser }\r\n                                        )}\r\n                                    >\r\n                                        <View style={{ justifyContent: 'center', alignItems: 'center' }} >\r\n                                            <Text style={{ fontSize: 18 }} >{currUser.followers.length}</Text>\r\n                                            <Text style={{ fontSize: 12, color: 'grey' }}>Followers</Text>\r\n                                        </View>\r\n                                    </TouchableComp>\r\n                                </View>\r\n\r\n                                <View style={{ alignItems: 'center' }}>\r\n                                    <TouchableComp\r\n                                        background={ Platform.OS === 'ios' ? undefined : TouchableNativeFeedback.Ripple('#c2c2c2', true) }\r\n                                        onPress={() => props.navigation.navigate(\r\n                                            'UserStats',\r\n                                            { activeTab: 1, currUser: currUser }\r\n                                        )}\r\n                                    >\r\n                                        <View style={{ justifyContent: 'center', alignItems: 'center' }} >\r\n                                            <Text style={{ fontSize: 18 }} >{currUser.following.length}</Text>\r\n                                            <Text style={{ fontSize: 12, color: 'grey' }}>Following</Text>\r\n                                        </View>\r\n                                    </TouchableComp>\r\n                                </View>\r\n                            </View>\r\n                            {/**\r\n                             * Edit profile and Settings Buttons **/}\r\n\r\n                            { userId === loggedInUserId ? (\r\n                                <View style={{ alignItems: 'flex-start', paddingTop: 10 }}>\r\n                                    <View\r\n                                        style={{ flexDirection: 'row' }}>\r\n                                        <Button\r\n                                            onPress={() => props.navigation.navigate('EditProfile')}\r\n                                            bordered\r\n                                            dark\r\n                                            style={{ flex: 1, marginLeft: 10, marginRight: 10, justifyContent: 'center', height: 30 }}\r\n                                        >\r\n                                            <Text>Edit Profile</Text>\r\n                                        </Button>\r\n                                    </View>\r\n                                </View>\r\n                            ) : (\r\n                                <View style={{ flexDirection: 'row', alignItems: 'flex-start', paddingTop: 10 }}>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row' }}>\r\n                                        <Button \r\n                                            onPress={followUserHandler}\r\n                                            bordered \r\n                                            dark\r\n                                            style={{ flex: 2, marginLeft: 10, marginRight: 10, justifyContent: 'center', height: 30 }}\r\n                                        >\r\n                                            { checkFollow(currUser._id) ? (\r\n                                                <>\r\n                                                    { isFollowLoading ? (\r\n                                                        <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                                                    ) : (\r\n                                                        <Text style={{ color: 'black' }} >Unfollow</Text>\r\n                                                    ) }\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    { isFollowLoading ? (\r\n                                                        <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                                                    ) : (\r\n                                                        <Text style={{ color: 'black' }} >Follow</Text>\r\n                                                    ) }\r\n                                                </>\r\n                                            ) }\r\n                                        </Button>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            ) }\r\n                            {/**End edit profile**/}\r\n                        </View>\r\n                    </View>\r\n\r\n                    <View style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n                        <View style={{ paddingHorizontal: 10 }} >\r\n                            <Text style={{ fontWeight: 'bold', fontSize: 18 }}>\r\n                                {currUser.name + \" \"} \r\n                                {\r\n                                    VerifiedUser.verifiedUsersId.includes(currUser._id) && <Octicons name=\"verified\" size={20} color={Colors.brightBlue} />\r\n                                }\r\n                            </Text>\r\n                            \r\n                            { currUser.about && (\r\n                                <Text>{currUser.about} </Text>\r\n                            ) }\r\n                            <Text>{currUser.email}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n                <View>\r\n                    {renderSection()}\r\n                </View>\r\n            </Content>\r\n        \r\n        </Container >\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const screenOptions = (navData) => {\r\n\r\n    const routeParams = navData.route.params ? navData.route.params : {};\r\n    if(!routeParams.name){\r\n        return{\r\n            headerTitle: routeParams.name ? routeParams.name : \"Profile\",\r\n            headerRight: () => (\r\n                <MenuItem />\r\n            )\r\n        }\r\n    } else {\r\n        return{\r\n            headerTitle: routeParams.name ? routeParams.name : \"Profile\",\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white'\r\n    }\r\n});\r\n\r\nexport default UserProfileScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
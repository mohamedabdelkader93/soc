{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\auth\\\\AuthScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { showMessage } from \"react-native-flash-message\";\nimport * as authActions from \"../../store/actions/auth\";\nimport { useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\n\nvar AuthScreen = function AuthScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignup = _useState2[0],\n      setIsSignUp = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      expoPushToken = _useState12[0],\n      setExpoPushToken = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      notification = _useState14[0],\n      setNotification = _useState14[1];\n\n  var dispatch = useDispatch();\n  var token;\n\n  var _notificationSubscription;\n\n  var registerForPushNotificationsAsync = function registerForPushNotificationsAsync() {\n    var _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context.next = 28;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 3:\n            _await$Permissions$ge = _context.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== 'granted')) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 9:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n\n          case 12:\n            if (!(finalStatus !== 'granted')) {\n              _context.next = 15;\n              break;\n            }\n\n            Alert.alert('Failed !', 'Failed to get push token for push notification!', [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 15:\n            _context.prev = 15;\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 18:\n            token = _context.sent;\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](15);\n            showMessage({\n              message: \"ERROR - \" + _context.t0.message,\n              description: \"\" + _context.t0,\n              type: \"danger\",\n              icon: {\n                icon: \"danger\",\n                position: 'left'\n              },\n              duration: 3000\n            });\n\n          case 24:\n            console.log(token);\n            setExpoPushToken(token);\n            _context.next = 29;\n            break;\n\n          case 28:\n            Alert.alert('Error !', 'Must use physical device for Push Notifications', [{\n              text: 'Okay'\n            }]);\n\n          case 29:\n            if (Platform.OS === 'android') {\n              Notifications.createChannelAndroidAsync('default', {\n                name: 'default',\n                sound: true,\n                priority: 'max',\n                vibrate: [0, 250, 250, 250]\n              });\n            }\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[15, 21]], Promise);\n  };\n\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n    console.log(expoPushToken);\n    _notificationSubscription = Notifications.addListener(_handleNotification);\n  }, []);\n\n  var _handleNotification = function _handleNotification(notification) {\n    Vibration.vibrate();\n    setNotification(notification);\n  };\n\n  var validateAuthForm = function validateAuthForm() {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var passwordRegex = /\\d/;\n\n    if (isSignup && !name) {\n      showMessage({\n        message: \"Please enter a valid name.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      setIsLoading(false);\n      return false;\n    }\n\n    if (isSignup && name && name.length < 2) {\n      showMessage({\n        message: \"Please enter a valid name.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      setIsLoading(false);\n      return false;\n    }\n\n    if (!emailRegex.test(email.toLowerCase())) {\n      showMessage({\n        message: \"Please enter a valid email.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      setIsLoading(false);\n      return false;\n    }\n\n    if (!password || password.length === 0) {\n      showMessage({\n        message: \"Please enter your password.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      setIsLoading(false);\n      return false;\n    }\n\n    if (isSignup && password.length < 6) {\n      showMessage({\n        message: \"Password should be atleast 6 characters long.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      setIsLoading(false);\n      return false;\n    }\n\n    if (isSignup && !passwordRegex.test(password)) {\n      showMessage({\n        message: \"Password should contain atleast 1 number.\",\n        type: \"danger\",\n        icon: {\n          icon: \"danger\",\n          position: 'left'\n        },\n        duration: 3000\n      });\n      setIsLoading(false);\n      return false;\n    }\n\n    return true;\n  };\n\n  var AuthHandler = function AuthHandler() {\n    var msg;\n    return _regeneratorRuntime.async(function AuthHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!validateAuthForm()) {\n              _context2.next = 30;\n              break;\n            }\n\n            if (!isSignup) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(authActions.signup(name, email, password, expoPushToken)));\n\n          case 6:\n            msg = _context2.sent;\n            showMessage({\n              message: \"Signup Success\",\n              description: 'Please Login !',\n              type: \"success\",\n              icon: {\n                icon: \"success\",\n                position: 'left'\n              },\n              duration: 3000\n            });\n            setIsSignUp(false);\n            setName('');\n            setEmail('');\n            setPassword('');\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](3);\n            showMessage({\n              message: _context2.t0.message,\n              type: \"danger\",\n              icon: {\n                icon: \"danger\",\n                position: 'left'\n              },\n              duration: 3000\n            });\n\n          case 17:\n            setIsLoading(false);\n            _context2.next = 30;\n            break;\n\n          case 20:\n            _context2.prev = 20;\n            _context2.next = 23;\n            return _regeneratorRuntime.awrap(dispatch(authActions.signin(email, password, expoPushToken)));\n\n          case 23:\n            showMessage({\n              message: \"Signed in success\",\n              type: \"success\",\n              icon: {\n                icon: \"success\",\n                position: 'left'\n              },\n              duration: 3000\n            });\n            _context2.next = 30;\n            break;\n\n          case 26:\n            _context2.prev = 26;\n            _context2.t1 = _context2[\"catch\"](20);\n            showMessage({\n              message: _context2.t1.message,\n              type: \"danger\",\n              icon: {\n                icon: \"danger\",\n                position: 'left'\n              },\n              duration: 3000\n            });\n            setIsLoading(false);\n\n          case 30:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[3, 14], [20, 26]], Promise);\n  };\n\n  var inputChangeHandler = function inputChangeHandler(text, inputField) {\n    if (inputField === 1) {\n      setName(text);\n    } else if (inputField === 2) {\n      setEmail(text);\n    } else if (inputField === 3) {\n      setPassword(text);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.bgImage,\n    source: require(\"../../assets/bg-auth.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.titleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, \"SocialApp\")), isSignup && React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Name\",\n    underlineColorAndroid: \"transparent\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return inputChangeHandler(text, 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/name.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return inputChangeHandler(text, 2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/email.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return inputChangeHandler(text, 3);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/key.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('ForgotPassword');\n    },\n    style: styles.btnForgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, \"Forgot your password?\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: AuthHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }) : React.createElement(Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, isSignup ? \"Register\" : \"Login\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.registerButton],\n    onPress: function onPress() {\n      setIsSignUp(function (prevState) {\n        return !prevState;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, isSignup ? \"Already a user ? Login\" : \"Don't have an account ? Register\")));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: 'Auth'\n  };\n};\nvar resizeMode = 'center';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  titleContainer: {\n    marginBottom: 40\n  },\n  title: {\n    fontSize: 42,\n    color: '#fff',\n    fontWeight: 'bold',\n    textShadowOffset: {\n      width: 0,\n      height: 1\n    },\n    textShadowRadius: 1,\n    textShadowColor: 'black',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 1,\n    textShadowColor: '#ccc',\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 1,\n    textShadowColor: 'black'\n  },\n  errorMsgContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 15,\n    marginHorizontal: 20,\n    borderWidth: 1,\n    borderColor: '#D8000C',\n    backgroundColor: \"#FFBABA\",\n    color: \"#D8000C\",\n    borderRadius: 25\n  },\n  successMsgContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 15,\n    marginHorizontal: 20,\n    borderWidth: 1,\n    borderColor: '#4F8A10',\n    backgroundColor: \"#DFF2BF\",\n    color: \"#4F8A10\",\n    borderRadius: 25\n  },\n  msgText: {\n    fontSize: 15\n  },\n  msgIcon: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  registerButton: {\n    backgroundColor: Colors.lightPrimary,\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  },\n  bgImage: {\n    flex: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: 'bold'\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/auth/AuthScreen.js"],"names":["React","useState","useEffect","showMessage","authActions","useDispatch","Colors","Notifications","Permissions","Constants","AuthScreen","props","isSignup","setIsSignUp","name","setName","email","setEmail","password","setPassword","isLoading","setIsLoading","expoPushToken","setExpoPushToken","notification","setNotification","dispatch","token","_notificationSubscription","registerForPushNotificationsAsync","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","Alert","alert","text","getExpoPushTokenAsync","message","description","type","icon","position","duration","console","log","Platform","OS","createChannelAndroidAsync","sound","priority","vibrate","addListener","_handleNotification","Vibration","validateAuthForm","emailRegex","passwordRegex","length","test","toLowerCase","AuthHandler","signup","msg","signin","inputChangeHandler","inputField","styles","container","bgImage","require","titleContainer","title","inputContainer","inputs","inputIcon","uri","navigation","navigate","btnForgotPassword","btnText","buttonContainer","loginButton","loginText","registerButton","prevState","screenOptions","navData","headerTitle","resizeMode","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","fontSize","color","fontWeight","textShadowOffset","width","height","textShadowRadius","textShadowColor","errorMsgContainer","display","flexDirection","padding","marginHorizontal","borderWidth","borderColor","borderRadius","successMsgContainer","msgText","msgIcon","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","borderBottomColor","marginRight","lightPrimary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator,\r\n    Vibration,\r\n    Platform,\r\n    Alert\r\n} from 'react-native';\r\n\r\nimport { showMessage } from \"react-native-flash-message\";\r\nimport * as authActions from '../../store/actions/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport Colors from '../../constants/Colors';\r\n\r\nimport { Notifications } from 'expo';\r\nimport * as Permissions from 'expo-permissions';\r\nimport Constants from 'expo-constants';\r\n\r\n\r\nconst AuthScreen = (props) => {\r\n\r\n    const [isSignup, setIsSignUp] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [expoPushToken, setExpoPushToken] = useState('');\r\n    const [notification, setNotification] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n    let token;\r\n    let _notificationSubscription;\r\n\r\n    const registerForPushNotificationsAsync = async () => {\r\n        if (Constants.isDevice) {\r\n            const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\r\n            let finalStatus = existingStatus;\r\n            if (existingStatus !== 'granted') {\r\n                const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\r\n                finalStatus = status;\r\n            }\r\n            if (finalStatus !== 'granted') {\r\n                Alert.alert(\r\n                    'Failed !',\r\n                    'Failed to get push token for push notification!',\r\n                    [{ text: 'Okay' }]\r\n                );\r\n                return;\r\n            }\r\n            try{\r\n                token = await Notifications.getExpoPushTokenAsync();\r\n            } catch(err){\r\n                showMessage({\r\n                    message: `ERROR - ${err.message}`,\r\n                    description: `${err}`,\r\n                    type: \"danger\",\r\n                    icon: { icon: \"danger\", position: 'left' },\r\n                    duration: 3000\r\n                });\r\n            }\r\n            console.log(token);\r\n            setExpoPushToken(token);\r\n        } else {\r\n            Alert.alert(\r\n                'Error !',\r\n                'Must use physical device for Push Notifications',\r\n                [{ text: 'Okay' }]\r\n            )\r\n        }\r\n        if (Platform.OS === 'android') {\r\n            Notifications.createChannelAndroidAsync('default', {\r\n                name: 'default',\r\n                sound: true,\r\n                priority: 'max',\r\n                vibrate: [0, 250, 250, 250],\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        registerForPushNotificationsAsync();\r\n        console.log(expoPushToken);\r\n        _notificationSubscription = Notifications.addListener(_handleNotification);\r\n    }, [])\r\n        \r\n\r\n    const _handleNotification = notification => {\r\n        Vibration.vibrate();\r\n        setNotification(notification);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const validateAuthForm = () => {\r\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const passwordRegex = /\\d/\r\n        if(isSignup && !name){\r\n            showMessage({\r\n                message: \"Please enter a valid name.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            setIsLoading(false);\r\n            return false;\r\n        }\r\n        if(isSignup && name && name.length < 2){\r\n            showMessage({\r\n                message: \"Please enter a valid name.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            setIsLoading(false);\r\n            return false;\r\n        }\r\n        if(!emailRegex.test(email.toLowerCase())){\r\n            showMessage({\r\n                message: \"Please enter a valid email.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            setIsLoading(false);\r\n            return false;\r\n        }\r\n        if(!password || password.length === 0){\r\n            showMessage({\r\n                message: \"Please enter your password.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            setIsLoading(false);\r\n            return false;\r\n        }\r\n        if(isSignup && password.length < 6){\r\n            showMessage({\r\n                message: \"Password should be atleast 6 characters long.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            setIsLoading(false);\r\n            return false;\r\n\r\n        }\r\n        if(isSignup && !passwordRegex.test(password)){\r\n            showMessage({\r\n                message: \"Password should contain atleast 1 number.\",\r\n                type: \"danger\",\r\n                icon: { icon: \"danger\", position: 'left' },\r\n                duration: 3000\r\n            });\r\n            setIsLoading(false);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    const AuthHandler = async () => {\r\n        setIsLoading(true);\r\n        if(validateAuthForm()){\r\n            if(isSignup){\r\n                try {\r\n                    const msg = await dispatch(authActions.signup(name, email, password, expoPushToken))\r\n                    showMessage({\r\n                        message: \"Signup Success\",\r\n                        description: 'Please Login !',\r\n                        type: \"success\",\r\n                        icon: { icon: \"success\", position: 'left' },\r\n                        duration: 3000\r\n                    });\r\n                    setIsSignUp(false);\r\n                    setName('');\r\n                    setEmail('');\r\n                    setPassword('');\r\n                } catch (error) {\r\n                    showMessage({\r\n                        message: error.message,\r\n                        type: \"danger\",\r\n                        icon: { icon: \"danger\", position: 'left' },\r\n                        duration: 3000\r\n                    });\r\n                }\r\n                setIsLoading(false);\r\n            } else {\r\n                try {\r\n                    await dispatch(authActions.signin(email, password, expoPushToken))\r\n                    showMessage({\r\n                        message: \"Signed in success\",\r\n                        type: \"success\",\r\n                        icon: { icon: \"success\", position: 'left' },\r\n                        duration: 3000\r\n                    });\r\n                } catch (error) {\r\n                    showMessage({\r\n                        message: error.message,\r\n                        type: \"danger\",\r\n                        icon: { icon: \"danger\", position: 'left' },\r\n                        duration: 3000\r\n                    });\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const inputChangeHandler = (text,inputField) => {\r\n        if(inputField === 1){\r\n            setName(text)\r\n        } else if(inputField === 2){\r\n            setEmail(text)\r\n        } else if(inputField === 3){\r\n            setPassword(text)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <View style={styles.container}>\r\n                <Image style={styles.bgImage} source={require('../../assets/bg-auth.png')} />\r\n                <View style={styles.titleContainer} >\r\n                    <Text style={styles.title}>SocialApp</Text>\r\n                </View>\r\n\r\n                {/* { error !== null && (\r\n                    <View style={styles.errorMsgContainer} >\r\n                        <Image style={styles.msgIcon} source={{ uri: \"https://i.imgur.com/GnyDvKN.png\" }} />\r\n                        <Text style={styles.msgText}> {error} </Text>\r\n                    </View>\r\n                )} */}\r\n\r\n                { isSignup && (\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput style={styles.inputs}\r\n                            placeholder=\"Name\"\r\n                            underlineColorAndroid='transparent'\r\n                            value={name}\r\n                            onChangeText={(text) => inputChangeHandler(text,1)}\r\n                        />\r\n                        <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/nolan/40/000000/name.png' }} />\r\n                    </View>\r\n                ) }\r\n                \r\n                <View style={styles.inputContainer}>\r\n                    <TextInput style={styles.inputs}\r\n                        placeholder=\"Email\"\r\n                        keyboardType=\"email-address\"\r\n                        underlineColorAndroid='transparent'\r\n                        value={email}\r\n                        onChangeText={(text) => inputChangeHandler(text, 2) }\r\n                    />\r\n                    <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/nolan/40/000000/email.png' }} />\r\n                </View>\r\n\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput style={styles.inputs}\r\n                        placeholder=\"Password\"\r\n                        secureTextEntry={true}\r\n                        underlineColorAndroid='transparent'\r\n                        value={password}\r\n                        onChangeText={(text) => inputChangeHandler(text, 3) }\r\n                    />\r\n                    <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/nolan/40/000000/key.png' }} />\r\n                </View>\r\n\r\n                <TouchableOpacity \r\n                    onPress={() => props.navigation.navigate('ForgotPassword')}\r\n                    style={styles.btnForgotPassword} \r\n                >\r\n                    <Text style={styles.btnText}>Forgot your password?</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity \r\n                    style={[styles.buttonContainer, styles.loginButton]}\r\n                    onPress={AuthHandler}\r\n                >\r\n\r\n                    { isLoading ? (\r\n                        <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                    )  :(\r\n                        <Text style={styles.loginText}>\r\n                            { isSignup ? \"Register\" : \"Login\" }\r\n                        </Text>\r\n                    ) }\r\n                    \r\n                </TouchableOpacity>\r\n\r\n\r\n                <TouchableOpacity \r\n                    style={[styles.buttonContainer, styles.registerButton]}\r\n                    onPress={() => {\r\n                        setIsSignUp(prevState => !prevState);\r\n                    }}\r\n                >\r\n                    <Text style={styles.btnText} >\r\n                        { isSignup ? \"Already a user ? Login\" : \"Don't have an account ? Register\" }\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>    \r\n    );\r\n}\r\n\r\n\r\nexport const screenOptions = (navData) => {\r\n    return{\r\n        headerTitle: 'Auth',\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst resizeMode = 'center';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#DCDCDC',\r\n    },\r\n    titleContainer: {\r\n        marginBottom: 40,\r\n    },  \r\n    title: {\r\n        fontSize: 42,\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n\r\n        textShadowOffset: {width: 0,height: 1},\r\n        textShadowRadius: 1,\r\n        textShadowColor: 'black',\r\n\r\n        textShadowOffset: {width: 1,height: 1},\r\n        textShadowRadius: 1,\r\n        textShadowColor: '#ccc',\r\n\r\n        textShadowOffset: {width: 2,height: 2},\r\n        textShadowRadius: 1,\r\n        textShadowColor: 'black',\r\n    },\r\n\r\n    errorMsgContainer:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginBottom: 15,\r\n        marginHorizontal: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#D8000C',\r\n        backgroundColor: \"#FFBABA\" ,\r\n        color: \"#D8000C\",\r\n        borderRadius: 25,\r\n    },\r\n    successMsgContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginBottom: 15,\r\n        marginHorizontal: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#4F8A10',\r\n        backgroundColor: \"#DFF2BF\" ,\r\n        color: \"#4F8A10\",\r\n        borderRadius: 25,\r\n        \r\n    },\r\n    msgText: {\r\n        fontSize: 15,\r\n    },\r\n    msgIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        // marginLeft: 15,\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    inputContainer: {\r\n        // borderBottomColor: '#F5FCFF',\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 30,\r\n        // borderBottomWidth: 1,\r\n        width: 300,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n\r\n        elevation: 5,\r\n    },\r\n    inputs: {\r\n        height: 45,\r\n        marginLeft: 16,\r\n        borderBottomColor: '#FFFFFF',\r\n        flex: 1,\r\n    },\r\n    inputIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        marginRight: 15,\r\n        justifyContent: 'center'\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        width: 300,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    btnForgotPassword: {\r\n        height: 15,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginBottom: 10,\r\n        width: 300,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: \"#00b5ec\",\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    registerButton: {\r\n        backgroundColor: Colors.lightPrimary,\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n    bgImage: {\r\n        flex: 1,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n    },\r\n    btnText: {\r\n        color: \"white\",\r\n        fontWeight: 'bold'\r\n    }\r\n}); \r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AuthScreen;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\components\\\\app\\\\ImgPicker.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../../constants/Colors\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport { showMessage } from \"react-native-flash-message\";\n\nvar ImgPicker = function ImgPicker(props) {\n  var _useState = useState(props.editImage),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedImage = _useState2[0],\n      setPickedImage = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function (e) {\n      if (!props.editImage) {\n        setPickedImage();\n      }\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  var verifyPermissions = function verifyPermissions() {\n    var result;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL));\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeImageHandler = function takeImageHandler(type) {\n    var hasPermission, image, res, imageExtenstion, imageType;\n    return _regeneratorRuntime.async(function takeImageHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.prev = 5;\n\n            if (!(type === 'gallery')) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              allowsEditing: true,\n              base64: true,\n              quality: 0.4\n            }));\n\n          case 9:\n            image = _context2.sent;\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              base64: true,\n              quality: 0.4\n            }));\n\n          case 14:\n            image = _context2.sent;\n\n          case 15:\n            if (!image.cancelled) {\n              setPickedImage(image);\n              res = image.uri.split('.');\n              imageExtenstion = res[res.length - 1];\n              imageType = image.type + \"/\" + imageExtenstion;\n              props.onImageTaken(image.base64, imageType);\n            }\n\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](5);\n            console.log(\"Image Error -\", _context2.t0);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 18]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.imagePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.imagePreview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, !pickedImage ? React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"No Image Picked\") : React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: props.previousUpdate ? pickedImage.uri + \"?\" + new Date(props.previousUpdate) : \"\" + pickedImage.uri\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: takeImageHandler.bind(_this, 'gallery'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Pick Image\"))));\n};\n\nvar styles = StyleSheet.create({\n  imagePicker: {\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  imagePreview: {\n    width: 320,\n    height: 200,\n    marginBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: Colors.brightBlue,\n    borderWidth: 1,\n    backgroundColor: '#c2c2c2'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    marginRight: 10,\n    width: 100,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: Colors.accent,\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  }\n});\nexport default ImgPicker;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/components/app/ImgPicker.js"],"names":["React","useState","useEffect","Colors","useNavigation","ImagePicker","Permissions","showMessage","ImgPicker","props","editImage","pickedImage","setPickedImage","navigation","unsubscribe","addListener","e","verifyPermissions","askAsync","CAMERA","CAMERA_ROLL","result","status","Alert","alert","text","takeImageHandler","type","hasPermission","launchImageLibraryAsync","allowsEditing","base64","quality","image","launchCameraAsync","cancelled","res","uri","split","imageExtenstion","length","imageType","onImageTaken","console","log","styles","imagePicker","imagePreview","fontSize","previousUpdate","Date","flexDirection","buttonContainer","loginButton","bind","loginText","StyleSheet","create","alignItems","marginBottom","width","height","justifyContent","borderColor","brightBlue","borderWidth","backgroundColor","resizeMode","marginRight","borderRadius","accent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, Image, Alert, TouchableOpacity } from 'react-native';\r\nimport Colors from '../../constants/Colors';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { showMessage } from \"react-native-flash-message\";\r\n\r\nconst ImgPicker = props => {\r\n    \r\n    const [pickedImage, setPickedImage] = useState(props.editImage);\r\n    const navigation = useNavigation();\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const unsubscribe = navigation.addListener('focus', e => {\r\n            if(!props.editImage){\r\n                setPickedImage()\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [])\r\n\r\n\r\n    const verifyPermissions = async () => {\r\n        const result = await Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL);\r\n        if(result.status !== 'granted'){\r\n            Alert.alert(\r\n                'Insufficient permissions!',\r\n                'You need to grant camera permissions to use this app.',\r\n                [{ text: 'Okay' }]\r\n            );\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const takeImageHandler = async (type) => {\r\n        const hasPermission = await verifyPermissions();\r\n        if(!hasPermission){\r\n            return;\r\n        }\r\n        let image;\r\n        try {\r\n            if(type === 'gallery'){\r\n                image = await ImagePicker.launchImageLibraryAsync({\r\n                    allowsEditing: true,\r\n                    base64: true,\r\n                    // aspect: [16, 9],\r\n                    quality: 0.4,\r\n                });\r\n            } else {\r\n                image = await ImagePicker.launchCameraAsync({\r\n                    allowsEditing: true,\r\n                    base64: true,\r\n                    // aspect: [16, 9],\r\n                    quality: 0.4,\r\n                });\r\n            }\r\n            if(!image.cancelled){\r\n                setPickedImage(image);\r\n                let res = image.uri.split('.');\r\n                let imageExtenstion = res[res.length - 1];\r\n                let imageType = `${image.type}/${imageExtenstion}`;\r\n                \r\n                props.onImageTaken(image.base64, imageType);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Image Error -\",error)\r\n        }\r\n    };\r\n\r\n    return(\r\n        <View style={styles.imagePicker} >\r\n            <View style={styles.imagePreview} >\r\n                { !pickedImage ? (\r\n                    <Text style={{ fontSize: 18 }} >No Image Picked</Text>\r\n                ) : (\r\n                    <Image\r\n                        style={styles.image}\r\n                        source={{ uri: props.previousUpdate ? `${pickedImage.uri}?${new Date(props.previousUpdate)}` : `${pickedImage.uri}` }}\r\n                    />\r\n                ) }\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row' }} >\r\n                <TouchableOpacity \r\n                    style={[styles.buttonContainer, styles.loginButton]}\r\n                    onPress={takeImageHandler.bind(this, 'gallery')}\r\n                >\r\n                    <Text style={styles.loginText}>\r\n                        Pick Image\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                {/* <TouchableOpacity \r\n                    style={[styles.buttonContainer, styles.loginButton]}\r\n                    onPress={takeImageHandler.bind(this, 'camera')}\r\n                >\r\n                    <Text style={styles.loginText}>\r\n                        Take Image\r\n                    </Text>\r\n                </TouchableOpacity> */}\r\n            </View>\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    imagePicker: {\r\n        alignItems: 'center',\r\n        marginBottom: 15,\r\n    },\r\n    imagePreview: {\r\n        width: 320,\r\n        height: 200,\r\n        marginBottom: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderColor: Colors.brightBlue,\r\n        borderWidth: 1,\r\n        backgroundColor: '#c2c2c2'\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '100%',\r\n        resizeMode: 'cover'\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        marginRight: 10,\r\n        width: 100,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: Colors.accent,\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n});\r\n\r\nexport default ImgPicker;"]},"metadata":{},"sourceType":"module"}
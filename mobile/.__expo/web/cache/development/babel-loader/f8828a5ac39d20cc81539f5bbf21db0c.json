{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodejs\\\\mern\\\\SocialApp-React-Native-master\\\\screens\\\\user\\\\FindPeopleScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport UserList from \"../../components/UI/UserList\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as usersActions from \"../../store/actions/users\";\nimport Colors from \"../../constants/Colors\";\nimport { Container, Header, Item, Input, Icon, Button } from 'native-base';\nimport VerifiedUser from \"../../constants/VerifiedUser\";\n\nvar FindPeopleScreen = function FindPeopleScreen(props) {\n  var findPeopleUsers = useSelector(function (state) {\n    return state.users.findPeople;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchText = _useState8[0],\n      setSearchText = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var dispatch = useDispatch();\n  var loadFindPeople = useCallback(function _callee() {\n    var result, verifiedUsers, otherUsers, updatedResult;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(usersActions.fetchFindPeopleUsers()));\n\n          case 5:\n            result = _context.sent;\n            verifiedUsers = result.filter(function (e) {\n              return VerifiedUser.verifiedUsersId.includes(e._id);\n            });\n            otherUsers = result.filter(function (e) {\n              return !VerifiedUser.verifiedUsersId.includes(e._id);\n            });\n            updatedResult = [].concat(_toConsumableArray(verifiedUsers), _toConsumableArray(otherUsers));\n            setData(updatedResult);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 15:\n            setIsRefreshing(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 12]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadFindPeople().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadFindPeople]);\n\n  var handleSearchTextChange = function handleSearchTextChange(text) {\n    setSearchText(text);\n\n    if (text !== '') {\n      var filteredData = [];\n      var currData = findPeopleUsers;\n      filteredData = currData.filter(function (item) {\n        var lc = item.name.toLowerCase();\n        var lcEmail = item.email.toLowerCase();\n        text = text.toLowerCase();\n        return lc.includes(text) || lcEmail.includes(text);\n      });\n      setData(filteredData);\n    } else {\n      setData(findPeopleUsers);\n    }\n  };\n\n  var followHandlerForData = function followHandlerForData(id) {\n    var searchData = data;\n    searchData = searchData.filter(function (i) {\n      return i._id !== id;\n    });\n    setData(searchData);\n  };\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"An error occured.\"), React.createElement(Button, {\n      onPress: loadFindPeople,\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Try again\")));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(Container, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    style: {\n      backgroundColor: Colors.brightBlue\n    },\n    searchBar: true,\n    rounded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), React.createElement(Input, {\n    value: searchText,\n    onChangeText: function onChangeText(text) {\n      return handleSearchTextChange(text);\n    },\n    placeholder: \"Search by name or email...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, data.length), React.createElement(Icon, {\n    name: \"ios-people\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }))), data.length === 0 && React.createElement(View, {\n    style: styles.centered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"No users found.\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Either you are already following the user\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"or no user exists with that name.\")), React.createElement(FlatList, {\n    style: styles.list,\n    refreshing: isRefreshing,\n    onRefresh: loadFindPeople,\n    contentContainerStyle: styles.listContainer,\n    data: data,\n    horizontal: false,\n    numColumns: 2,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(UserList, {\n        item: item,\n        followHandler: followHandlerForData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 30\n  },\n  container: {\n    flex: 1\n  },\n  list: {\n    paddingHorizontal: 5,\n    backgroundColor: '#fff'\n  },\n  listContainer: {\n    alignItems: 'center'\n  }\n});\nexport default FindPeopleScreen;","map":{"version":3,"sources":["D:/nodejs/mern/SocialApp-React-Native-master/screens/user/FindPeopleScreen.js"],"names":["React","useState","useEffect","useCallback","UserList","useDispatch","useSelector","usersActions","Colors","Container","Header","Item","Input","Icon","Button","VerifiedUser","FindPeopleScreen","props","findPeopleUsers","state","users","findPeople","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","searchText","setSearchText","data","setData","dispatch","loadFindPeople","fetchFindPeopleUsers","result","verifiedUsers","filter","e","verifiedUsersId","includes","_id","otherUsers","updatedResult","message","then","handleSearchTextChange","text","filteredData","currData","item","lc","name","toLowerCase","lcEmail","email","followHandlerForData","id","searchData","i","styles","centered","primary","backgroundColor","brightBlue","length","fontSize","margin","list","listContainer","StyleSheet","create","flex","justifyContent","alignItems","container","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, {useState,useEffect, useCallback} from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\n\r\nimport UserList from '../../components/UI/UserList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as usersActions from '../../store/actions/users';\r\nimport Colors from '../../constants/Colors';\r\n\r\nimport { Container, Header, Item, Input, Icon, Button } from 'native-base';\r\nimport VerifiedUser from '../../constants/VerifiedUser';\r\n\r\nconst FindPeopleScreen = (props) => {\r\n\r\n    const findPeopleUsers = useSelector(state => state.users.findPeople);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isRefreshing, setIsRefreshing] = useState(false);\r\n    const [error, setError] = useState();\r\n    const [searchText, setSearchText] = useState('');\r\n    const [data, setData] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const loadFindPeople = useCallback(async () => {\r\n        setError(null);\r\n        setIsRefreshing(true);\r\n        try {\r\n            const result = await dispatch(usersActions.fetchFindPeopleUsers());\r\n            let verifiedUsers =  result.filter(e => VerifiedUser.verifiedUsersId.includes(e._id));\r\n            let otherUsers = result.filter(e => !VerifiedUser.verifiedUsersId.includes(e._id));\r\n            let updatedResult = [...verifiedUsers, ...otherUsers];\r\n            setData(updatedResult);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n        setIsRefreshing(false);\r\n    }, [dispatch, setIsLoading, setError])\r\n\r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        loadFindPeople()\r\n        .then(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }, [dispatch, loadFindPeople])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const unsubscribe = props.navigation.addListener('focus', e => {\r\n    //         setSearchText('');\r\n    //         setData(findPeopleUsers);\r\n    //     });\r\n    //     return () => {\r\n    //         unsubscribe();\r\n    //     };\r\n    // }, [])\r\n\r\n\r\n    const handleSearchTextChange = (text) => {\r\n        setSearchText(text);\r\n        if(text !== ''){\r\n            let filteredData = []\r\n            let currData = findPeopleUsers;\r\n\r\n            filteredData = currData.filter(item => {\r\n                const lc = item.name.toLowerCase();\r\n                const lcEmail = item.email.toLowerCase();\r\n                text = text.toLowerCase();\r\n                return lc.includes(text) || lcEmail.includes(text);\r\n            });\r\n            setData(filteredData);\r\n        } else {\r\n            setData(findPeopleUsers);\r\n        }\r\n    }\r\n\r\n\r\n    const followHandlerForData = (id) => {\r\n        //follow handler to remove item from search data i.e. data state\r\n        let searchData = data;\r\n        searchData = searchData.filter(i => i._id !== id);\r\n        setData(searchData);\r\n    }\r\n\r\n\r\n\r\n    if(error){\r\n        return (\r\n            <View style={styles.centered} >\r\n                <Text>An error occured.</Text>\r\n                <Button onPress={loadFindPeople} color={Colors.primary} >\r\n                    <Text>Try again</Text>\r\n                </Button>\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    if(isLoading){\r\n        return (\r\n            <View style={styles.centered} >\r\n                <ActivityIndicator size='large' color={Colors.primary} />\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container style={{ backgroundColor: '#fff' }} >\r\n            <Header style={{ backgroundColor: Colors.brightBlue }} searchBar rounded>\r\n                <Item>\r\n                    <Icon name=\"ios-search\" />\r\n                    <Input\r\n                        value={searchText}\r\n                        onChangeText={(text) => handleSearchTextChange(text)}\r\n                        placeholder={`Search by name or email...`}\r\n                    />\r\n                    <Text>{data.length}</Text>\r\n                    <Icon name=\"ios-people\"  />\r\n                </Item>\r\n            </Header>\r\n            { data.length === 0 && (\r\n                <View style={styles.centered}>\r\n                    <Text style={{ fontSize: 18, margin: 10 }} >No users found.</Text>\r\n                    <Text>Either you are already following the user</Text>\r\n                    <Text>or no user exists with that name.</Text>\r\n                </View>\r\n            ) }\r\n            <FlatList\r\n                style={styles.list}\r\n                refreshing={isRefreshing}\r\n                onRefresh={loadFindPeople}\r\n                contentContainerStyle={styles.listContainer}\r\n                data={data}\r\n                horizontal={false}\r\n                numColumns={2}\r\n                keyExtractor={(item) => {\r\n                    return item._id;\r\n                }}\r\n                renderItem={({ item }) => (\r\n                    <UserList item={item} followHandler={followHandlerForData} />\r\n                )} \r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 30\r\n    },\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    list: {\r\n        paddingHorizontal: 5,\r\n        // backgroundColor: \"#E6E6E6\",\r\n        backgroundColor: '#fff'\r\n    },\r\n    listContainer: {\r\n        alignItems: 'center'\r\n    },\r\n});\r\n\r\nexport default FindPeopleScreen;"]},"metadata":{},"sourceType":"module"}